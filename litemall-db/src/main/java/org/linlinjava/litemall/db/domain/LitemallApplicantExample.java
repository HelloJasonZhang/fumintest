package org.linlinjava.litemall.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallApplicantExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public LitemallApplicantExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public LitemallApplicantExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public LitemallApplicantExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallApplicantExample example = new LitemallApplicantExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public LitemallApplicantExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public LitemallApplicantExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> bankIdCriteria;

        protected List<Criterion> hsExtraPicUrlCriteria;

        protected List<Criterion> scExtraPicUrlCriteria;

        protected List<Criterion> bLoanVoucherUrlCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
            bankIdCriteria = new ArrayList<Criterion>();
            hsExtraPicUrlCriteria = new ArrayList<Criterion>();
            scExtraPicUrlCriteria = new ArrayList<Criterion>();
            bLoanVoucherUrlCriteria = new ArrayList<Criterion>();
        }

        public List<Criterion> getBankIdCriteria() {
            return bankIdCriteria;
        }

        protected void addBankIdCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            bankIdCriteria.add(new Criterion(condition, value, "org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler"));
            allCriteria = null;
        }

        protected void addBankIdCriterion(String condition, Integer[] value1, Integer[] value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            bankIdCriteria.add(new Criterion(condition, value1, value2, "org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getHsExtraPicUrlCriteria() {
            return hsExtraPicUrlCriteria;
        }

        protected void addHsExtraPicUrlCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            hsExtraPicUrlCriteria.add(new Criterion(condition, value, "org.linlinjava.litemall.db.mybatis.JsonStringArrayTypeHandler"));
            allCriteria = null;
        }

        protected void addHsExtraPicUrlCriterion(String condition, String[] value1, String[] value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            hsExtraPicUrlCriteria.add(new Criterion(condition, value1, value2, "org.linlinjava.litemall.db.mybatis.JsonStringArrayTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getScExtraPicUrlCriteria() {
            return scExtraPicUrlCriteria;
        }

        protected void addScExtraPicUrlCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            scExtraPicUrlCriteria.add(new Criterion(condition, value, "org.linlinjava.litemall.db.mybatis.JsonStringArrayTypeHandler"));
            allCriteria = null;
        }

        protected void addScExtraPicUrlCriterion(String condition, String[] value1, String[] value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            scExtraPicUrlCriteria.add(new Criterion(condition, value1, value2, "org.linlinjava.litemall.db.mybatis.JsonStringArrayTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getbLoanVoucherUrlCriteria() {
            return bLoanVoucherUrlCriteria;
        }

        protected void addBLoanVoucherUrlCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            bLoanVoucherUrlCriteria.add(new Criterion(condition, value, "org.linlinjava.litemall.db.mybatis.JsonStringArrayTypeHandler"));
            allCriteria = null;
        }

        protected void addBLoanVoucherUrlCriterion(String condition, String[] value1, String[] value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            bLoanVoucherUrlCriteria.add(new Criterion(condition, value1, value2, "org.linlinjava.litemall.db.mybatis.JsonStringArrayTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || bankIdCriteria.size() > 0
                || hsExtraPicUrlCriteria.size() > 0
                || scExtraPicUrlCriteria.size() > 0
                || bLoanVoucherUrlCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<Criterion>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(bankIdCriteria);
                allCriteria.addAll(hsExtraPicUrlCriteria);
                allCriteria.addAll(scExtraPicUrlCriteria);
                allCriteria.addAll(bLoanVoucherUrlCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUserIdEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUserIdNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andSexIsNull() {
            addCriterion("sex is null");
            return (Criteria) this;
        }

        public Criteria andSexIsNotNull() {
            addCriterion("sex is not null");
            return (Criteria) this;
        }

        public Criteria andSexEqualTo(String value) {
            addCriterion("sex =", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSexEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sex = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexNotEqualTo(String value) {
            addCriterion("sex <>", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSexNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sex <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexGreaterThan(String value) {
            addCriterion("sex >", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSexGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sex > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexGreaterThanOrEqualTo(String value) {
            addCriterion("sex >=", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSexGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sex >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLessThan(String value) {
            addCriterion("sex <", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSexLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sex < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLessThanOrEqualTo(String value) {
            addCriterion("sex <=", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSexLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sex <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLike(String value) {
            addCriterion("sex like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotLike(String value) {
            addCriterion("sex not like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexIn(List<String> values) {
            addCriterion("sex in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotIn(List<String> values) {
            addCriterion("sex not in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexBetween(String value1, String value2) {
            addCriterion("sex between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotBetween(String value1, String value2) {
            addCriterion("sex not between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusIsNull() {
            addCriterion("marital_status is null");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusIsNotNull() {
            addCriterion("marital_status is not null");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusEqualTo(String value) {
            addCriterion("marital_status =", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marital_status = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusNotEqualTo(String value) {
            addCriterion("marital_status <>", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marital_status <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusGreaterThan(String value) {
            addCriterion("marital_status >", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marital_status > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusGreaterThanOrEqualTo(String value) {
            addCriterion("marital_status >=", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marital_status >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusLessThan(String value) {
            addCriterion("marital_status <", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marital_status < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusLessThanOrEqualTo(String value) {
            addCriterion("marital_status <=", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marital_status <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusLike(String value) {
            addCriterion("marital_status like", value, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusNotLike(String value) {
            addCriterion("marital_status not like", value, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusIn(List<String> values) {
            addCriterion("marital_status in", values, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusNotIn(List<String> values) {
            addCriterion("marital_status not in", values, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusBetween(String value1, String value2) {
            addCriterion("marital_status between", value1, value2, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusNotBetween(String value1, String value2) {
            addCriterion("marital_status not between", value1, value2, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andIdCardNumberIsNull() {
            addCriterion("id_card_number is null");
            return (Criteria) this;
        }

        public Criteria andIdCardNumberIsNotNull() {
            addCriterion("id_card_number is not null");
            return (Criteria) this;
        }

        public Criteria andIdCardNumberEqualTo(String value) {
            addCriterion("id_card_number =", value, "idCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardNumberEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardNumberNotEqualTo(String value) {
            addCriterion("id_card_number <>", value, "idCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardNumberNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardNumberGreaterThan(String value) {
            addCriterion("id_card_number >", value, "idCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardNumberGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardNumberGreaterThanOrEqualTo(String value) {
            addCriterion("id_card_number >=", value, "idCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardNumberGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardNumberLessThan(String value) {
            addCriterion("id_card_number <", value, "idCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardNumberLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardNumberLessThanOrEqualTo(String value) {
            addCriterion("id_card_number <=", value, "idCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardNumberLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardNumberLike(String value) {
            addCriterion("id_card_number like", value, "idCardNumber");
            return (Criteria) this;
        }

        public Criteria andIdCardNumberNotLike(String value) {
            addCriterion("id_card_number not like", value, "idCardNumber");
            return (Criteria) this;
        }

        public Criteria andIdCardNumberIn(List<String> values) {
            addCriterion("id_card_number in", values, "idCardNumber");
            return (Criteria) this;
        }

        public Criteria andIdCardNumberNotIn(List<String> values) {
            addCriterion("id_card_number not in", values, "idCardNumber");
            return (Criteria) this;
        }

        public Criteria andIdCardNumberBetween(String value1, String value2) {
            addCriterion("id_card_number between", value1, value2, "idCardNumber");
            return (Criteria) this;
        }

        public Criteria andIdCardNumberNotBetween(String value1, String value2) {
            addCriterion("id_card_number not between", value1, value2, "idCardNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberIsNull() {
            addCriterion("phone_number is null");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberIsNotNull() {
            addCriterion("phone_number is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberEqualTo(String value) {
            addCriterion("phone_number =", value, "phoneNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPhoneNumberEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("phone_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNumberNotEqualTo(String value) {
            addCriterion("phone_number <>", value, "phoneNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPhoneNumberNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("phone_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNumberGreaterThan(String value) {
            addCriterion("phone_number >", value, "phoneNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPhoneNumberGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("phone_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNumberGreaterThanOrEqualTo(String value) {
            addCriterion("phone_number >=", value, "phoneNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPhoneNumberGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("phone_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNumberLessThan(String value) {
            addCriterion("phone_number <", value, "phoneNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPhoneNumberLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("phone_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNumberLessThanOrEqualTo(String value) {
            addCriterion("phone_number <=", value, "phoneNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPhoneNumberLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("phone_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNumberLike(String value) {
            addCriterion("phone_number like", value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberNotLike(String value) {
            addCriterion("phone_number not like", value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberIn(List<String> values) {
            addCriterion("phone_number in", values, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberNotIn(List<String> values) {
            addCriterion("phone_number not in", values, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberBetween(String value1, String value2) {
            addCriterion("phone_number between", value1, value2, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberNotBetween(String value1, String value2) {
            addCriterion("phone_number not between", value1, value2, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andSpouseNameIsNull() {
            addCriterion("spouse_name is null");
            return (Criteria) this;
        }

        public Criteria andSpouseNameIsNotNull() {
            addCriterion("spouse_name is not null");
            return (Criteria) this;
        }

        public Criteria andSpouseNameEqualTo(String value) {
            addCriterion("spouse_name =", value, "spouseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseNameEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseNameNotEqualTo(String value) {
            addCriterion("spouse_name <>", value, "spouseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseNameNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseNameGreaterThan(String value) {
            addCriterion("spouse_name >", value, "spouseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseNameGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseNameGreaterThanOrEqualTo(String value) {
            addCriterion("spouse_name >=", value, "spouseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseNameGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseNameLessThan(String value) {
            addCriterion("spouse_name <", value, "spouseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseNameLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseNameLessThanOrEqualTo(String value) {
            addCriterion("spouse_name <=", value, "spouseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseNameLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseNameLike(String value) {
            addCriterion("spouse_name like", value, "spouseName");
            return (Criteria) this;
        }

        public Criteria andSpouseNameNotLike(String value) {
            addCriterion("spouse_name not like", value, "spouseName");
            return (Criteria) this;
        }

        public Criteria andSpouseNameIn(List<String> values) {
            addCriterion("spouse_name in", values, "spouseName");
            return (Criteria) this;
        }

        public Criteria andSpouseNameNotIn(List<String> values) {
            addCriterion("spouse_name not in", values, "spouseName");
            return (Criteria) this;
        }

        public Criteria andSpouseNameBetween(String value1, String value2) {
            addCriterion("spouse_name between", value1, value2, "spouseName");
            return (Criteria) this;
        }

        public Criteria andSpouseNameNotBetween(String value1, String value2) {
            addCriterion("spouse_name not between", value1, value2, "spouseName");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeIsNull() {
            addCriterion("applicant_type is null");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeIsNotNull() {
            addCriterion("applicant_type is not null");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeEqualTo(String value) {
            addCriterion("applicant_type =", value, "applicantType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeNotEqualTo(String value) {
            addCriterion("applicant_type <>", value, "applicantType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeGreaterThan(String value) {
            addCriterion("applicant_type >", value, "applicantType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeGreaterThanOrEqualTo(String value) {
            addCriterion("applicant_type >=", value, "applicantType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLessThan(String value) {
            addCriterion("applicant_type <", value, "applicantType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLessThanOrEqualTo(String value) {
            addCriterion("applicant_type <=", value, "applicantType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLike(String value) {
            addCriterion("applicant_type like", value, "applicantType");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeNotLike(String value) {
            addCriterion("applicant_type not like", value, "applicantType");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeIn(List<String> values) {
            addCriterion("applicant_type in", values, "applicantType");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeNotIn(List<String> values) {
            addCriterion("applicant_type not in", values, "applicantType");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeBetween(String value1, String value2) {
            addCriterion("applicant_type between", value1, value2, "applicantType");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeNotBetween(String value1, String value2) {
            addCriterion("applicant_type not between", value1, value2, "applicantType");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableIsNull() {
            addCriterion("applicant_type_lable is null");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableIsNotNull() {
            addCriterion("applicant_type_lable is not null");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableEqualTo(String value) {
            addCriterion("applicant_type_lable =", value, "applicantTypeLable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeLableEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type_lable = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableNotEqualTo(String value) {
            addCriterion("applicant_type_lable <>", value, "applicantTypeLable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeLableNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type_lable <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableGreaterThan(String value) {
            addCriterion("applicant_type_lable >", value, "applicantTypeLable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeLableGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type_lable > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableGreaterThanOrEqualTo(String value) {
            addCriterion("applicant_type_lable >=", value, "applicantTypeLable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeLableGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type_lable >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableLessThan(String value) {
            addCriterion("applicant_type_lable <", value, "applicantTypeLable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeLableLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type_lable < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableLessThanOrEqualTo(String value) {
            addCriterion("applicant_type_lable <=", value, "applicantTypeLable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantTypeLableLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_type_lable <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableLike(String value) {
            addCriterion("applicant_type_lable like", value, "applicantTypeLable");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableNotLike(String value) {
            addCriterion("applicant_type_lable not like", value, "applicantTypeLable");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableIn(List<String> values) {
            addCriterion("applicant_type_lable in", values, "applicantTypeLable");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableNotIn(List<String> values) {
            addCriterion("applicant_type_lable not in", values, "applicantTypeLable");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableBetween(String value1, String value2) {
            addCriterion("applicant_type_lable between", value1, value2, "applicantTypeLable");
            return (Criteria) this;
        }

        public Criteria andApplicantTypeLableNotBetween(String value1, String value2) {
            addCriterion("applicant_type_lable not between", value1, value2, "applicantTypeLable");
            return (Criteria) this;
        }

        public Criteria andApplicantAmountIsNull() {
            addCriterion("applicant_amount is null");
            return (Criteria) this;
        }

        public Criteria andApplicantAmountIsNotNull() {
            addCriterion("applicant_amount is not null");
            return (Criteria) this;
        }

        public Criteria andApplicantAmountEqualTo(String value) {
            addCriterion("applicant_amount =", value, "applicantAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantAmountEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantAmountNotEqualTo(String value) {
            addCriterion("applicant_amount <>", value, "applicantAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantAmountNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantAmountGreaterThan(String value) {
            addCriterion("applicant_amount >", value, "applicantAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantAmountGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantAmountGreaterThanOrEqualTo(String value) {
            addCriterion("applicant_amount >=", value, "applicantAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantAmountGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantAmountLessThan(String value) {
            addCriterion("applicant_amount <", value, "applicantAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantAmountLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantAmountLessThanOrEqualTo(String value) {
            addCriterion("applicant_amount <=", value, "applicantAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantAmountLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantAmountLike(String value) {
            addCriterion("applicant_amount like", value, "applicantAmount");
            return (Criteria) this;
        }

        public Criteria andApplicantAmountNotLike(String value) {
            addCriterion("applicant_amount not like", value, "applicantAmount");
            return (Criteria) this;
        }

        public Criteria andApplicantAmountIn(List<String> values) {
            addCriterion("applicant_amount in", values, "applicantAmount");
            return (Criteria) this;
        }

        public Criteria andApplicantAmountNotIn(List<String> values) {
            addCriterion("applicant_amount not in", values, "applicantAmount");
            return (Criteria) this;
        }

        public Criteria andApplicantAmountBetween(String value1, String value2) {
            addCriterion("applicant_amount between", value1, value2, "applicantAmount");
            return (Criteria) this;
        }

        public Criteria andApplicantAmountNotBetween(String value1, String value2) {
            addCriterion("applicant_amount not between", value1, value2, "applicantAmount");
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryIsNull() {
            addCriterion("recruit_category is null");
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryIsNotNull() {
            addCriterion("recruit_category is not null");
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryEqualTo(String value) {
            addCriterion("recruit_category =", value, "recruitCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andRecruitCategoryEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("recruit_category = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryNotEqualTo(String value) {
            addCriterion("recruit_category <>", value, "recruitCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andRecruitCategoryNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("recruit_category <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryGreaterThan(String value) {
            addCriterion("recruit_category >", value, "recruitCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andRecruitCategoryGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("recruit_category > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryGreaterThanOrEqualTo(String value) {
            addCriterion("recruit_category >=", value, "recruitCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andRecruitCategoryGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("recruit_category >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryLessThan(String value) {
            addCriterion("recruit_category <", value, "recruitCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andRecruitCategoryLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("recruit_category < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryLessThanOrEqualTo(String value) {
            addCriterion("recruit_category <=", value, "recruitCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andRecruitCategoryLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("recruit_category <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryLike(String value) {
            addCriterion("recruit_category like", value, "recruitCategory");
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryNotLike(String value) {
            addCriterion("recruit_category not like", value, "recruitCategory");
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryIn(List<String> values) {
            addCriterion("recruit_category in", values, "recruitCategory");
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryNotIn(List<String> values) {
            addCriterion("recruit_category not in", values, "recruitCategory");
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryBetween(String value1, String value2) {
            addCriterion("recruit_category between", value1, value2, "recruitCategory");
            return (Criteria) this;
        }

        public Criteria andRecruitCategoryNotBetween(String value1, String value2) {
            addCriterion("recruit_category not between", value1, value2, "recruitCategory");
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryIsNull() {
            addCriterion("applicant_category is null");
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryIsNotNull() {
            addCriterion("applicant_category is not null");
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryEqualTo(String value) {
            addCriterion("applicant_category =", value, "applicantCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantCategoryEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_category = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryNotEqualTo(String value) {
            addCriterion("applicant_category <>", value, "applicantCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantCategoryNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_category <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryGreaterThan(String value) {
            addCriterion("applicant_category >", value, "applicantCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantCategoryGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_category > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryGreaterThanOrEqualTo(String value) {
            addCriterion("applicant_category >=", value, "applicantCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantCategoryGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_category >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryLessThan(String value) {
            addCriterion("applicant_category <", value, "applicantCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantCategoryLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_category < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryLessThanOrEqualTo(String value) {
            addCriterion("applicant_category <=", value, "applicantCategory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andApplicantCategoryLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("applicant_category <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryLike(String value) {
            addCriterion("applicant_category like", value, "applicantCategory");
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryNotLike(String value) {
            addCriterion("applicant_category not like", value, "applicantCategory");
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryIn(List<String> values) {
            addCriterion("applicant_category in", values, "applicantCategory");
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryNotIn(List<String> values) {
            addCriterion("applicant_category not in", values, "applicantCategory");
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryBetween(String value1, String value2) {
            addCriterion("applicant_category between", value1, value2, "applicantCategory");
            return (Criteria) this;
        }

        public Criteria andApplicantCategoryNotBetween(String value1, String value2) {
            addCriterion("applicant_category not between", value1, value2, "applicantCategory");
            return (Criteria) this;
        }

        public Criteria andAddressIsNull() {
            addCriterion("address is null");
            return (Criteria) this;
        }

        public Criteria andAddressIsNotNull() {
            addCriterion("address is not null");
            return (Criteria) this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("address =", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddressEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("address <>", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddressNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("address >", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddressGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("address >=", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddressGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("address <", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddressLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("address <=", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddressLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("address <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("address like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("address not like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressIn(List<String> values) {
            addCriterion("address in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotIn(List<String> values) {
            addCriterion("address not in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("address between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("address not between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberIsNull() {
            addCriterion("spouse_id_card_number is null");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberIsNotNull() {
            addCriterion("spouse_id_card_number is not null");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberEqualTo(String value) {
            addCriterion("spouse_id_card_number =", value, "spouseIdCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardNumberEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberNotEqualTo(String value) {
            addCriterion("spouse_id_card_number <>", value, "spouseIdCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardNumberNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberGreaterThan(String value) {
            addCriterion("spouse_id_card_number >", value, "spouseIdCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardNumberGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberGreaterThanOrEqualTo(String value) {
            addCriterion("spouse_id_card_number >=", value, "spouseIdCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardNumberGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberLessThan(String value) {
            addCriterion("spouse_id_card_number <", value, "spouseIdCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardNumberLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberLessThanOrEqualTo(String value) {
            addCriterion("spouse_id_card_number <=", value, "spouseIdCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardNumberLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberLike(String value) {
            addCriterion("spouse_id_card_number like", value, "spouseIdCardNumber");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberNotLike(String value) {
            addCriterion("spouse_id_card_number not like", value, "spouseIdCardNumber");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberIn(List<String> values) {
            addCriterion("spouse_id_card_number in", values, "spouseIdCardNumber");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberNotIn(List<String> values) {
            addCriterion("spouse_id_card_number not in", values, "spouseIdCardNumber");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberBetween(String value1, String value2) {
            addCriterion("spouse_id_card_number between", value1, value2, "spouseIdCardNumber");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardNumberNotBetween(String value1, String value2) {
            addCriterion("spouse_id_card_number not between", value1, value2, "spouseIdCardNumber");
            return (Criteria) this;
        }

        public Criteria andObtainInfoIsNull() {
            addCriterion("obtain_info is null");
            return (Criteria) this;
        }

        public Criteria andObtainInfoIsNotNull() {
            addCriterion("obtain_info is not null");
            return (Criteria) this;
        }

        public Criteria andObtainInfoEqualTo(String value) {
            addCriterion("obtain_info =", value, "obtainInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andObtainInfoEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("obtain_info = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObtainInfoNotEqualTo(String value) {
            addCriterion("obtain_info <>", value, "obtainInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andObtainInfoNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("obtain_info <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObtainInfoGreaterThan(String value) {
            addCriterion("obtain_info >", value, "obtainInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andObtainInfoGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("obtain_info > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObtainInfoGreaterThanOrEqualTo(String value) {
            addCriterion("obtain_info >=", value, "obtainInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andObtainInfoGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("obtain_info >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObtainInfoLessThan(String value) {
            addCriterion("obtain_info <", value, "obtainInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andObtainInfoLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("obtain_info < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObtainInfoLessThanOrEqualTo(String value) {
            addCriterion("obtain_info <=", value, "obtainInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andObtainInfoLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("obtain_info <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObtainInfoLike(String value) {
            addCriterion("obtain_info like", value, "obtainInfo");
            return (Criteria) this;
        }

        public Criteria andObtainInfoNotLike(String value) {
            addCriterion("obtain_info not like", value, "obtainInfo");
            return (Criteria) this;
        }

        public Criteria andObtainInfoIn(List<String> values) {
            addCriterion("obtain_info in", values, "obtainInfo");
            return (Criteria) this;
        }

        public Criteria andObtainInfoNotIn(List<String> values) {
            addCriterion("obtain_info not in", values, "obtainInfo");
            return (Criteria) this;
        }

        public Criteria andObtainInfoBetween(String value1, String value2) {
            addCriterion("obtain_info between", value1, value2, "obtainInfo");
            return (Criteria) this;
        }

        public Criteria andObtainInfoNotBetween(String value1, String value2) {
            addCriterion("obtain_info not between", value1, value2, "obtainInfo");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlIsNull() {
            addCriterion("business_license_url is null");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlIsNotNull() {
            addCriterion("business_license_url is not null");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlEqualTo(String value) {
            addCriterion("business_license_url =", value, "businessLicenseUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlNotEqualTo(String value) {
            addCriterion("business_license_url <>", value, "businessLicenseUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlGreaterThan(String value) {
            addCriterion("business_license_url >", value, "businessLicenseUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlGreaterThanOrEqualTo(String value) {
            addCriterion("business_license_url >=", value, "businessLicenseUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlLessThan(String value) {
            addCriterion("business_license_url <", value, "businessLicenseUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlLessThanOrEqualTo(String value) {
            addCriterion("business_license_url <=", value, "businessLicenseUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlLike(String value) {
            addCriterion("business_license_url like", value, "businessLicenseUrl");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlNotLike(String value) {
            addCriterion("business_license_url not like", value, "businessLicenseUrl");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlIn(List<String> values) {
            addCriterion("business_license_url in", values, "businessLicenseUrl");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlNotIn(List<String> values) {
            addCriterion("business_license_url not in", values, "businessLicenseUrl");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlBetween(String value1, String value2) {
            addCriterion("business_license_url between", value1, value2, "businessLicenseUrl");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrlNotBetween(String value1, String value2) {
            addCriterion("business_license_url not between", value1, value2, "businessLicenseUrl");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2IsNull() {
            addCriterion("business_license_url_2 is null");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2IsNotNull() {
            addCriterion("business_license_url_2 is not null");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2EqualTo(String value) {
            addCriterion("business_license_url_2 =", value, "businessLicenseUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrl2EqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url_2 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2NotEqualTo(String value) {
            addCriterion("business_license_url_2 <>", value, "businessLicenseUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrl2NotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url_2 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2GreaterThan(String value) {
            addCriterion("business_license_url_2 >", value, "businessLicenseUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrl2GreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url_2 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2GreaterThanOrEqualTo(String value) {
            addCriterion("business_license_url_2 >=", value, "businessLicenseUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrl2GreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url_2 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2LessThan(String value) {
            addCriterion("business_license_url_2 <", value, "businessLicenseUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrl2LessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url_2 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2LessThanOrEqualTo(String value) {
            addCriterion("business_license_url_2 <=", value, "businessLicenseUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBusinessLicenseUrl2LessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("business_license_url_2 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2Like(String value) {
            addCriterion("business_license_url_2 like", value, "businessLicenseUrl2");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2NotLike(String value) {
            addCriterion("business_license_url_2 not like", value, "businessLicenseUrl2");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2In(List<String> values) {
            addCriterion("business_license_url_2 in", values, "businessLicenseUrl2");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2NotIn(List<String> values) {
            addCriterion("business_license_url_2 not in", values, "businessLicenseUrl2");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2Between(String value1, String value2) {
            addCriterion("business_license_url_2 between", value1, value2, "businessLicenseUrl2");
            return (Criteria) this;
        }

        public Criteria andBusinessLicenseUrl2NotBetween(String value1, String value2) {
            addCriterion("business_license_url_2 not between", value1, value2, "businessLicenseUrl2");
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlIsNull() {
            addCriterion("labor_contract_url is null");
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlIsNotNull() {
            addCriterion("labor_contract_url is not null");
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlEqualTo(String value) {
            addCriterion("labor_contract_url =", value, "laborContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLaborContractUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("labor_contract_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlNotEqualTo(String value) {
            addCriterion("labor_contract_url <>", value, "laborContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLaborContractUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("labor_contract_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlGreaterThan(String value) {
            addCriterion("labor_contract_url >", value, "laborContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLaborContractUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("labor_contract_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlGreaterThanOrEqualTo(String value) {
            addCriterion("labor_contract_url >=", value, "laborContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLaborContractUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("labor_contract_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlLessThan(String value) {
            addCriterion("labor_contract_url <", value, "laborContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLaborContractUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("labor_contract_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlLessThanOrEqualTo(String value) {
            addCriterion("labor_contract_url <=", value, "laborContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLaborContractUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("labor_contract_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlLike(String value) {
            addCriterion("labor_contract_url like", value, "laborContractUrl");
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlNotLike(String value) {
            addCriterion("labor_contract_url not like", value, "laborContractUrl");
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlIn(List<String> values) {
            addCriterion("labor_contract_url in", values, "laborContractUrl");
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlNotIn(List<String> values) {
            addCriterion("labor_contract_url not in", values, "laborContractUrl");
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlBetween(String value1, String value2) {
            addCriterion("labor_contract_url between", value1, value2, "laborContractUrl");
            return (Criteria) this;
        }

        public Criteria andLaborContractUrlNotBetween(String value1, String value2) {
            addCriterion("labor_contract_url not between", value1, value2, "laborContractUrl");
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlIsNull() {
            addCriterion("salary_detail_url is null");
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlIsNotNull() {
            addCriterion("salary_detail_url is not null");
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlEqualTo(String value) {
            addCriterion("salary_detail_url =", value, "salaryDetailUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSalaryDetailUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("salary_detail_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlNotEqualTo(String value) {
            addCriterion("salary_detail_url <>", value, "salaryDetailUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSalaryDetailUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("salary_detail_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlGreaterThan(String value) {
            addCriterion("salary_detail_url >", value, "salaryDetailUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSalaryDetailUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("salary_detail_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlGreaterThanOrEqualTo(String value) {
            addCriterion("salary_detail_url >=", value, "salaryDetailUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSalaryDetailUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("salary_detail_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlLessThan(String value) {
            addCriterion("salary_detail_url <", value, "salaryDetailUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSalaryDetailUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("salary_detail_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlLessThanOrEqualTo(String value) {
            addCriterion("salary_detail_url <=", value, "salaryDetailUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSalaryDetailUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("salary_detail_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlLike(String value) {
            addCriterion("salary_detail_url like", value, "salaryDetailUrl");
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlNotLike(String value) {
            addCriterion("salary_detail_url not like", value, "salaryDetailUrl");
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlIn(List<String> values) {
            addCriterion("salary_detail_url in", values, "salaryDetailUrl");
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlNotIn(List<String> values) {
            addCriterion("salary_detail_url not in", values, "salaryDetailUrl");
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlBetween(String value1, String value2) {
            addCriterion("salary_detail_url between", value1, value2, "salaryDetailUrl");
            return (Criteria) this;
        }

        public Criteria andSalaryDetailUrlNotBetween(String value1, String value2) {
            addCriterion("salary_detail_url not between", value1, value2, "salaryDetailUrl");
            return (Criteria) this;
        }

        public Criteria andIdCardUrlIsNull() {
            addCriterion("id_card_url is null");
            return (Criteria) this;
        }

        public Criteria andIdCardUrlIsNotNull() {
            addCriterion("id_card_url is not null");
            return (Criteria) this;
        }

        public Criteria andIdCardUrlEqualTo(String value) {
            addCriterion("id_card_url =", value, "idCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrlNotEqualTo(String value) {
            addCriterion("id_card_url <>", value, "idCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrlGreaterThan(String value) {
            addCriterion("id_card_url >", value, "idCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrlGreaterThanOrEqualTo(String value) {
            addCriterion("id_card_url >=", value, "idCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrlLessThan(String value) {
            addCriterion("id_card_url <", value, "idCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrlLessThanOrEqualTo(String value) {
            addCriterion("id_card_url <=", value, "idCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrlLike(String value) {
            addCriterion("id_card_url like", value, "idCardUrl");
            return (Criteria) this;
        }

        public Criteria andIdCardUrlNotLike(String value) {
            addCriterion("id_card_url not like", value, "idCardUrl");
            return (Criteria) this;
        }

        public Criteria andIdCardUrlIn(List<String> values) {
            addCriterion("id_card_url in", values, "idCardUrl");
            return (Criteria) this;
        }

        public Criteria andIdCardUrlNotIn(List<String> values) {
            addCriterion("id_card_url not in", values, "idCardUrl");
            return (Criteria) this;
        }

        public Criteria andIdCardUrlBetween(String value1, String value2) {
            addCriterion("id_card_url between", value1, value2, "idCardUrl");
            return (Criteria) this;
        }

        public Criteria andIdCardUrlNotBetween(String value1, String value2) {
            addCriterion("id_card_url not between", value1, value2, "idCardUrl");
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2IsNull() {
            addCriterion("id_card_url_2 is null");
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2IsNotNull() {
            addCriterion("id_card_url_2 is not null");
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2EqualTo(String value) {
            addCriterion("id_card_url_2 =", value, "idCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrl2EqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url_2 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2NotEqualTo(String value) {
            addCriterion("id_card_url_2 <>", value, "idCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrl2NotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url_2 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2GreaterThan(String value) {
            addCriterion("id_card_url_2 >", value, "idCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrl2GreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url_2 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2GreaterThanOrEqualTo(String value) {
            addCriterion("id_card_url_2 >=", value, "idCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrl2GreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url_2 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2LessThan(String value) {
            addCriterion("id_card_url_2 <", value, "idCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrl2LessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url_2 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2LessThanOrEqualTo(String value) {
            addCriterion("id_card_url_2 <=", value, "idCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIdCardUrl2LessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("id_card_url_2 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2Like(String value) {
            addCriterion("id_card_url_2 like", value, "idCardUrl2");
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2NotLike(String value) {
            addCriterion("id_card_url_2 not like", value, "idCardUrl2");
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2In(List<String> values) {
            addCriterion("id_card_url_2 in", values, "idCardUrl2");
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2NotIn(List<String> values) {
            addCriterion("id_card_url_2 not in", values, "idCardUrl2");
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2Between(String value1, String value2) {
            addCriterion("id_card_url_2 between", value1, value2, "idCardUrl2");
            return (Criteria) this;
        }

        public Criteria andIdCardUrl2NotBetween(String value1, String value2) {
            addCriterion("id_card_url_2 not between", value1, value2, "idCardUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlIsNull() {
            addCriterion("spouse_id_card_url is null");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlIsNotNull() {
            addCriterion("spouse_id_card_url is not null");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlEqualTo(String value) {
            addCriterion("spouse_id_card_url =", value, "spouseIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlNotEqualTo(String value) {
            addCriterion("spouse_id_card_url <>", value, "spouseIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlGreaterThan(String value) {
            addCriterion("spouse_id_card_url >", value, "spouseIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlGreaterThanOrEqualTo(String value) {
            addCriterion("spouse_id_card_url >=", value, "spouseIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlLessThan(String value) {
            addCriterion("spouse_id_card_url <", value, "spouseIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlLessThanOrEqualTo(String value) {
            addCriterion("spouse_id_card_url <=", value, "spouseIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlLike(String value) {
            addCriterion("spouse_id_card_url like", value, "spouseIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlNotLike(String value) {
            addCriterion("spouse_id_card_url not like", value, "spouseIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlIn(List<String> values) {
            addCriterion("spouse_id_card_url in", values, "spouseIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlNotIn(List<String> values) {
            addCriterion("spouse_id_card_url not in", values, "spouseIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlBetween(String value1, String value2) {
            addCriterion("spouse_id_card_url between", value1, value2, "spouseIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrlNotBetween(String value1, String value2) {
            addCriterion("spouse_id_card_url not between", value1, value2, "spouseIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2IsNull() {
            addCriterion("spouse_id_card_url_2 is null");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2IsNotNull() {
            addCriterion("spouse_id_card_url_2 is not null");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2EqualTo(String value) {
            addCriterion("spouse_id_card_url_2 =", value, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrl2EqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url_2 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2NotEqualTo(String value) {
            addCriterion("spouse_id_card_url_2 <>", value, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrl2NotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url_2 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2GreaterThan(String value) {
            addCriterion("spouse_id_card_url_2 >", value, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrl2GreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url_2 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2GreaterThanOrEqualTo(String value) {
            addCriterion("spouse_id_card_url_2 >=", value, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrl2GreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url_2 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2LessThan(String value) {
            addCriterion("spouse_id_card_url_2 <", value, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrl2LessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url_2 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2LessThanOrEqualTo(String value) {
            addCriterion("spouse_id_card_url_2 <=", value, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseIdCardUrl2LessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_id_card_url_2 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2Like(String value) {
            addCriterion("spouse_id_card_url_2 like", value, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2NotLike(String value) {
            addCriterion("spouse_id_card_url_2 not like", value, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2In(List<String> values) {
            addCriterion("spouse_id_card_url_2 in", values, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2NotIn(List<String> values) {
            addCriterion("spouse_id_card_url_2 not in", values, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2Between(String value1, String value2) {
            addCriterion("spouse_id_card_url_2 between", value1, value2, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseIdCardUrl2NotBetween(String value1, String value2) {
            addCriterion("spouse_id_card_url_2 not between", value1, value2, "spouseIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlIsNull() {
            addCriterion("marriage_certificate_url is null");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlIsNotNull() {
            addCriterion("marriage_certificate_url is not null");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlEqualTo(String value) {
            addCriterion("marriage_certificate_url =", value, "marriageCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlNotEqualTo(String value) {
            addCriterion("marriage_certificate_url <>", value, "marriageCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlGreaterThan(String value) {
            addCriterion("marriage_certificate_url >", value, "marriageCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlGreaterThanOrEqualTo(String value) {
            addCriterion("marriage_certificate_url >=", value, "marriageCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlLessThan(String value) {
            addCriterion("marriage_certificate_url <", value, "marriageCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlLessThanOrEqualTo(String value) {
            addCriterion("marriage_certificate_url <=", value, "marriageCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlLike(String value) {
            addCriterion("marriage_certificate_url like", value, "marriageCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlNotLike(String value) {
            addCriterion("marriage_certificate_url not like", value, "marriageCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlIn(List<String> values) {
            addCriterion("marriage_certificate_url in", values, "marriageCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlNotIn(List<String> values) {
            addCriterion("marriage_certificate_url not in", values, "marriageCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlBetween(String value1, String value2) {
            addCriterion("marriage_certificate_url between", value1, value2, "marriageCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrlNotBetween(String value1, String value2) {
            addCriterion("marriage_certificate_url not between", value1, value2, "marriageCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2IsNull() {
            addCriterion("marriage_certificate_url_2 is null");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2IsNotNull() {
            addCriterion("marriage_certificate_url_2 is not null");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2EqualTo(String value) {
            addCriterion("marriage_certificate_url_2 =", value, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrl2EqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url_2 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2NotEqualTo(String value) {
            addCriterion("marriage_certificate_url_2 <>", value, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrl2NotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url_2 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2GreaterThan(String value) {
            addCriterion("marriage_certificate_url_2 >", value, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrl2GreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url_2 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2GreaterThanOrEqualTo(String value) {
            addCriterion("marriage_certificate_url_2 >=", value, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrl2GreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url_2 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2LessThan(String value) {
            addCriterion("marriage_certificate_url_2 <", value, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrl2LessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url_2 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2LessThanOrEqualTo(String value) {
            addCriterion("marriage_certificate_url_2 <=", value, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMarriageCertificateUrl2LessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("marriage_certificate_url_2 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2Like(String value) {
            addCriterion("marriage_certificate_url_2 like", value, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2NotLike(String value) {
            addCriterion("marriage_certificate_url_2 not like", value, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2In(List<String> values) {
            addCriterion("marriage_certificate_url_2 in", values, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2NotIn(List<String> values) {
            addCriterion("marriage_certificate_url_2 not in", values, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2Between(String value1, String value2) {
            addCriterion("marriage_certificate_url_2 between", value1, value2, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        public Criteria andMarriageCertificateUrl2NotBetween(String value1, String value2) {
            addCriterion("marriage_certificate_url_2 not between", value1, value2, "marriageCertificateUrl2");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlIsNull() {
            addCriterion("residence_booklet_url is null");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlIsNotNull() {
            addCriterion("residence_booklet_url is not null");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlEqualTo(String value) {
            addCriterion("residence_booklet_url =", value, "residenceBookletUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlNotEqualTo(String value) {
            addCriterion("residence_booklet_url <>", value, "residenceBookletUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlGreaterThan(String value) {
            addCriterion("residence_booklet_url >", value, "residenceBookletUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlGreaterThanOrEqualTo(String value) {
            addCriterion("residence_booklet_url >=", value, "residenceBookletUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlLessThan(String value) {
            addCriterion("residence_booklet_url <", value, "residenceBookletUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlLessThanOrEqualTo(String value) {
            addCriterion("residence_booklet_url <=", value, "residenceBookletUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlLike(String value) {
            addCriterion("residence_booklet_url like", value, "residenceBookletUrl");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlNotLike(String value) {
            addCriterion("residence_booklet_url not like", value, "residenceBookletUrl");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlIn(List<String> values) {
            addCriterion("residence_booklet_url in", values, "residenceBookletUrl");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlNotIn(List<String> values) {
            addCriterion("residence_booklet_url not in", values, "residenceBookletUrl");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlBetween(String value1, String value2) {
            addCriterion("residence_booklet_url between", value1, value2, "residenceBookletUrl");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrlNotBetween(String value1, String value2) {
            addCriterion("residence_booklet_url not between", value1, value2, "residenceBookletUrl");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2IsNull() {
            addCriterion("residence_booklet_url_2 is null");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2IsNotNull() {
            addCriterion("residence_booklet_url_2 is not null");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2EqualTo(String value) {
            addCriterion("residence_booklet_url_2 =", value, "residenceBookletUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrl2EqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url_2 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2NotEqualTo(String value) {
            addCriterion("residence_booklet_url_2 <>", value, "residenceBookletUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrl2NotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url_2 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2GreaterThan(String value) {
            addCriterion("residence_booklet_url_2 >", value, "residenceBookletUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrl2GreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url_2 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2GreaterThanOrEqualTo(String value) {
            addCriterion("residence_booklet_url_2 >=", value, "residenceBookletUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrl2GreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url_2 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2LessThan(String value) {
            addCriterion("residence_booklet_url_2 <", value, "residenceBookletUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrl2LessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url_2 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2LessThanOrEqualTo(String value) {
            addCriterion("residence_booklet_url_2 <=", value, "residenceBookletUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andResidenceBookletUrl2LessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("residence_booklet_url_2 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2Like(String value) {
            addCriterion("residence_booklet_url_2 like", value, "residenceBookletUrl2");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2NotLike(String value) {
            addCriterion("residence_booklet_url_2 not like", value, "residenceBookletUrl2");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2In(List<String> values) {
            addCriterion("residence_booklet_url_2 in", values, "residenceBookletUrl2");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2NotIn(List<String> values) {
            addCriterion("residence_booklet_url_2 not in", values, "residenceBookletUrl2");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2Between(String value1, String value2) {
            addCriterion("residence_booklet_url_2 between", value1, value2, "residenceBookletUrl2");
            return (Criteria) this;
        }

        public Criteria andResidenceBookletUrl2NotBetween(String value1, String value2) {
            addCriterion("residence_booklet_url_2 not between", value1, value2, "residenceBookletUrl2");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlIsNull() {
            addCriterion("credit_report_url is null");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlIsNotNull() {
            addCriterion("credit_report_url is not null");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlEqualTo(String value) {
            addCriterion("credit_report_url =", value, "creditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlNotEqualTo(String value) {
            addCriterion("credit_report_url <>", value, "creditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlGreaterThan(String value) {
            addCriterion("credit_report_url >", value, "creditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlGreaterThanOrEqualTo(String value) {
            addCriterion("credit_report_url >=", value, "creditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlLessThan(String value) {
            addCriterion("credit_report_url <", value, "creditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlLessThanOrEqualTo(String value) {
            addCriterion("credit_report_url <=", value, "creditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlLike(String value) {
            addCriterion("credit_report_url like", value, "creditReportUrl");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlNotLike(String value) {
            addCriterion("credit_report_url not like", value, "creditReportUrl");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlIn(List<String> values) {
            addCriterion("credit_report_url in", values, "creditReportUrl");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlNotIn(List<String> values) {
            addCriterion("credit_report_url not in", values, "creditReportUrl");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlBetween(String value1, String value2) {
            addCriterion("credit_report_url between", value1, value2, "creditReportUrl");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrlNotBetween(String value1, String value2) {
            addCriterion("credit_report_url not between", value1, value2, "creditReportUrl");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2IsNull() {
            addCriterion("credit_report_url_2 is null");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2IsNotNull() {
            addCriterion("credit_report_url_2 is not null");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2EqualTo(String value) {
            addCriterion("credit_report_url_2 =", value, "creditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrl2EqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url_2 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2NotEqualTo(String value) {
            addCriterion("credit_report_url_2 <>", value, "creditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrl2NotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url_2 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2GreaterThan(String value) {
            addCriterion("credit_report_url_2 >", value, "creditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrl2GreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url_2 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2GreaterThanOrEqualTo(String value) {
            addCriterion("credit_report_url_2 >=", value, "creditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrl2GreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url_2 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2LessThan(String value) {
            addCriterion("credit_report_url_2 <", value, "creditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrl2LessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url_2 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2LessThanOrEqualTo(String value) {
            addCriterion("credit_report_url_2 <=", value, "creditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andCreditReportUrl2LessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("credit_report_url_2 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2Like(String value) {
            addCriterion("credit_report_url_2 like", value, "creditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2NotLike(String value) {
            addCriterion("credit_report_url_2 not like", value, "creditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2In(List<String> values) {
            addCriterion("credit_report_url_2 in", values, "creditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2NotIn(List<String> values) {
            addCriterion("credit_report_url_2 not in", values, "creditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2Between(String value1, String value2) {
            addCriterion("credit_report_url_2 between", value1, value2, "creditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andCreditReportUrl2NotBetween(String value1, String value2) {
            addCriterion("credit_report_url_2 not between", value1, value2, "creditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlIsNull() {
            addCriterion("spouse_credit_report_url is null");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlIsNotNull() {
            addCriterion("spouse_credit_report_url is not null");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlEqualTo(String value) {
            addCriterion("spouse_credit_report_url =", value, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlNotEqualTo(String value) {
            addCriterion("spouse_credit_report_url <>", value, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlGreaterThan(String value) {
            addCriterion("spouse_credit_report_url >", value, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlGreaterThanOrEqualTo(String value) {
            addCriterion("spouse_credit_report_url >=", value, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlLessThan(String value) {
            addCriterion("spouse_credit_report_url <", value, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlLessThanOrEqualTo(String value) {
            addCriterion("spouse_credit_report_url <=", value, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlLike(String value) {
            addCriterion("spouse_credit_report_url like", value, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlNotLike(String value) {
            addCriterion("spouse_credit_report_url not like", value, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlIn(List<String> values) {
            addCriterion("spouse_credit_report_url in", values, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlNotIn(List<String> values) {
            addCriterion("spouse_credit_report_url not in", values, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlBetween(String value1, String value2) {
            addCriterion("spouse_credit_report_url between", value1, value2, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrlNotBetween(String value1, String value2) {
            addCriterion("spouse_credit_report_url not between", value1, value2, "spouseCreditReportUrl");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2IsNull() {
            addCriterion("spouse_credit_report_url_2 is null");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2IsNotNull() {
            addCriterion("spouse_credit_report_url_2 is not null");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2EqualTo(String value) {
            addCriterion("spouse_credit_report_url_2 =", value, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrl2EqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url_2 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2NotEqualTo(String value) {
            addCriterion("spouse_credit_report_url_2 <>", value, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrl2NotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url_2 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2GreaterThan(String value) {
            addCriterion("spouse_credit_report_url_2 >", value, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrl2GreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url_2 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2GreaterThanOrEqualTo(String value) {
            addCriterion("spouse_credit_report_url_2 >=", value, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrl2GreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url_2 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2LessThan(String value) {
            addCriterion("spouse_credit_report_url_2 <", value, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrl2LessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url_2 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2LessThanOrEqualTo(String value) {
            addCriterion("spouse_credit_report_url_2 <=", value, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSpouseCreditReportUrl2LessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("spouse_credit_report_url_2 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2Like(String value) {
            addCriterion("spouse_credit_report_url_2 like", value, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2NotLike(String value) {
            addCriterion("spouse_credit_report_url_2 not like", value, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2In(List<String> values) {
            addCriterion("spouse_credit_report_url_2 in", values, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2NotIn(List<String> values) {
            addCriterion("spouse_credit_report_url_2 not in", values, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2Between(String value1, String value2) {
            addCriterion("spouse_credit_report_url_2 between", value1, value2, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andSpouseCreditReportUrl2NotBetween(String value1, String value2) {
            addCriterion("spouse_credit_report_url_2 not between", value1, value2, "spouseCreditReportUrl2");
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlIsNull() {
            addCriterion("undertaking_url is null");
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlIsNotNull() {
            addCriterion("undertaking_url is not null");
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlEqualTo(String value) {
            addCriterion("undertaking_url =", value, "undertakingUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUndertakingUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("undertaking_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlNotEqualTo(String value) {
            addCriterion("undertaking_url <>", value, "undertakingUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUndertakingUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("undertaking_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlGreaterThan(String value) {
            addCriterion("undertaking_url >", value, "undertakingUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUndertakingUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("undertaking_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlGreaterThanOrEqualTo(String value) {
            addCriterion("undertaking_url >=", value, "undertakingUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUndertakingUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("undertaking_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlLessThan(String value) {
            addCriterion("undertaking_url <", value, "undertakingUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUndertakingUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("undertaking_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlLessThanOrEqualTo(String value) {
            addCriterion("undertaking_url <=", value, "undertakingUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUndertakingUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("undertaking_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlLike(String value) {
            addCriterion("undertaking_url like", value, "undertakingUrl");
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlNotLike(String value) {
            addCriterion("undertaking_url not like", value, "undertakingUrl");
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlIn(List<String> values) {
            addCriterion("undertaking_url in", values, "undertakingUrl");
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlNotIn(List<String> values) {
            addCriterion("undertaking_url not in", values, "undertakingUrl");
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlBetween(String value1, String value2) {
            addCriterion("undertaking_url between", value1, value2, "undertakingUrl");
            return (Criteria) this;
        }

        public Criteria andUndertakingUrlNotBetween(String value1, String value2) {
            addCriterion("undertaking_url not between", value1, value2, "undertakingUrl");
            return (Criteria) this;
        }

        public Criteria andSignatureUrlIsNull() {
            addCriterion("signature_url is null");
            return (Criteria) this;
        }

        public Criteria andSignatureUrlIsNotNull() {
            addCriterion("signature_url is not null");
            return (Criteria) this;
        }

        public Criteria andSignatureUrlEqualTo(String value) {
            addCriterion("signature_url =", value, "signatureUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSignatureUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("signature_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignatureUrlNotEqualTo(String value) {
            addCriterion("signature_url <>", value, "signatureUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSignatureUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("signature_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignatureUrlGreaterThan(String value) {
            addCriterion("signature_url >", value, "signatureUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSignatureUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("signature_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignatureUrlGreaterThanOrEqualTo(String value) {
            addCriterion("signature_url >=", value, "signatureUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSignatureUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("signature_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignatureUrlLessThan(String value) {
            addCriterion("signature_url <", value, "signatureUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSignatureUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("signature_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignatureUrlLessThanOrEqualTo(String value) {
            addCriterion("signature_url <=", value, "signatureUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSignatureUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("signature_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignatureUrlLike(String value) {
            addCriterion("signature_url like", value, "signatureUrl");
            return (Criteria) this;
        }

        public Criteria andSignatureUrlNotLike(String value) {
            addCriterion("signature_url not like", value, "signatureUrl");
            return (Criteria) this;
        }

        public Criteria andSignatureUrlIn(List<String> values) {
            addCriterion("signature_url in", values, "signatureUrl");
            return (Criteria) this;
        }

        public Criteria andSignatureUrlNotIn(List<String> values) {
            addCriterion("signature_url not in", values, "signatureUrl");
            return (Criteria) this;
        }

        public Criteria andSignatureUrlBetween(String value1, String value2) {
            addCriterion("signature_url between", value1, value2, "signatureUrl");
            return (Criteria) this;
        }

        public Criteria andSignatureUrlNotBetween(String value1, String value2) {
            addCriterion("signature_url not between", value1, value2, "signatureUrl");
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlIsNull() {
            addCriterion("lease_contract_url is null");
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlIsNotNull() {
            addCriterion("lease_contract_url is not null");
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlEqualTo(String value) {
            addCriterion("lease_contract_url =", value, "leaseContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLeaseContractUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("lease_contract_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlNotEqualTo(String value) {
            addCriterion("lease_contract_url <>", value, "leaseContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLeaseContractUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("lease_contract_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlGreaterThan(String value) {
            addCriterion("lease_contract_url >", value, "leaseContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLeaseContractUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("lease_contract_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlGreaterThanOrEqualTo(String value) {
            addCriterion("lease_contract_url >=", value, "leaseContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLeaseContractUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("lease_contract_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlLessThan(String value) {
            addCriterion("lease_contract_url <", value, "leaseContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLeaseContractUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("lease_contract_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlLessThanOrEqualTo(String value) {
            addCriterion("lease_contract_url <=", value, "leaseContractUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLeaseContractUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("lease_contract_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlLike(String value) {
            addCriterion("lease_contract_url like", value, "leaseContractUrl");
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlNotLike(String value) {
            addCriterion("lease_contract_url not like", value, "leaseContractUrl");
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlIn(List<String> values) {
            addCriterion("lease_contract_url in", values, "leaseContractUrl");
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlNotIn(List<String> values) {
            addCriterion("lease_contract_url not in", values, "leaseContractUrl");
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlBetween(String value1, String value2) {
            addCriterion("lease_contract_url between", value1, value2, "leaseContractUrl");
            return (Criteria) this;
        }

        public Criteria andLeaseContractUrlNotBetween(String value1, String value2) {
            addCriterion("lease_contract_url not between", value1, value2, "leaseContractUrl");
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlIsNull() {
            addCriterion("property_certificate_url is null");
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlIsNotNull() {
            addCriterion("property_certificate_url is not null");
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlEqualTo(String value) {
            addCriterion("property_certificate_url =", value, "propertyCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPropertyCertificateUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("property_certificate_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlNotEqualTo(String value) {
            addCriterion("property_certificate_url <>", value, "propertyCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPropertyCertificateUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("property_certificate_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlGreaterThan(String value) {
            addCriterion("property_certificate_url >", value, "propertyCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPropertyCertificateUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("property_certificate_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlGreaterThanOrEqualTo(String value) {
            addCriterion("property_certificate_url >=", value, "propertyCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPropertyCertificateUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("property_certificate_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlLessThan(String value) {
            addCriterion("property_certificate_url <", value, "propertyCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPropertyCertificateUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("property_certificate_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlLessThanOrEqualTo(String value) {
            addCriterion("property_certificate_url <=", value, "propertyCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPropertyCertificateUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("property_certificate_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlLike(String value) {
            addCriterion("property_certificate_url like", value, "propertyCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlNotLike(String value) {
            addCriterion("property_certificate_url not like", value, "propertyCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlIn(List<String> values) {
            addCriterion("property_certificate_url in", values, "propertyCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlNotIn(List<String> values) {
            addCriterion("property_certificate_url not in", values, "propertyCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlBetween(String value1, String value2) {
            addCriterion("property_certificate_url between", value1, value2, "propertyCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andPropertyCertificateUrlNotBetween(String value1, String value2) {
            addCriterion("property_certificate_url not between", value1, value2, "propertyCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlIsNull() {
            addCriterion("house_proprietary_certificate_url is null");
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlIsNotNull() {
            addCriterion("house_proprietary_certificate_url is not null");
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlEqualTo(String value) {
            addCriterion("house_proprietary_certificate_url =", value, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHouseProprietaryCertificateUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("house_proprietary_certificate_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlNotEqualTo(String value) {
            addCriterion("house_proprietary_certificate_url <>", value, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHouseProprietaryCertificateUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("house_proprietary_certificate_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlGreaterThan(String value) {
            addCriterion("house_proprietary_certificate_url >", value, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHouseProprietaryCertificateUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("house_proprietary_certificate_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlGreaterThanOrEqualTo(String value) {
            addCriterion("house_proprietary_certificate_url >=", value, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHouseProprietaryCertificateUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("house_proprietary_certificate_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlLessThan(String value) {
            addCriterion("house_proprietary_certificate_url <", value, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHouseProprietaryCertificateUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("house_proprietary_certificate_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlLessThanOrEqualTo(String value) {
            addCriterion("house_proprietary_certificate_url <=", value, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHouseProprietaryCertificateUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("house_proprietary_certificate_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlLike(String value) {
            addCriterion("house_proprietary_certificate_url like", value, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlNotLike(String value) {
            addCriterion("house_proprietary_certificate_url not like", value, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlIn(List<String> values) {
            addCriterion("house_proprietary_certificate_url in", values, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlNotIn(List<String> values) {
            addCriterion("house_proprietary_certificate_url not in", values, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlBetween(String value1, String value2) {
            addCriterion("house_proprietary_certificate_url between", value1, value2, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andHouseProprietaryCertificateUrlNotBetween(String value1, String value2) {
            addCriterion("house_proprietary_certificate_url not between", value1, value2, "houseProprietaryCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlIsNull() {
            addCriterion("vehicles_certificate_url is null");
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlIsNotNull() {
            addCriterion("vehicles_certificate_url is not null");
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlEqualTo(String value) {
            addCriterion("vehicles_certificate_url =", value, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andVehiclesCertificateUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("vehicles_certificate_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlNotEqualTo(String value) {
            addCriterion("vehicles_certificate_url <>", value, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andVehiclesCertificateUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("vehicles_certificate_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlGreaterThan(String value) {
            addCriterion("vehicles_certificate_url >", value, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andVehiclesCertificateUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("vehicles_certificate_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlGreaterThanOrEqualTo(String value) {
            addCriterion("vehicles_certificate_url >=", value, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andVehiclesCertificateUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("vehicles_certificate_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlLessThan(String value) {
            addCriterion("vehicles_certificate_url <", value, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andVehiclesCertificateUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("vehicles_certificate_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlLessThanOrEqualTo(String value) {
            addCriterion("vehicles_certificate_url <=", value, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andVehiclesCertificateUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("vehicles_certificate_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlLike(String value) {
            addCriterion("vehicles_certificate_url like", value, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlNotLike(String value) {
            addCriterion("vehicles_certificate_url not like", value, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlIn(List<String> values) {
            addCriterion("vehicles_certificate_url in", values, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlNotIn(List<String> values) {
            addCriterion("vehicles_certificate_url not in", values, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlBetween(String value1, String value2) {
            addCriterion("vehicles_certificate_url between", value1, value2, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andVehiclesCertificateUrlNotBetween(String value1, String value2) {
            addCriterion("vehicles_certificate_url not between", value1, value2, "vehiclesCertificateUrl");
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlIsNull() {
            addCriterion("bank_reconciliation_url is null");
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlIsNotNull() {
            addCriterion("bank_reconciliation_url is not null");
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlEqualTo(String value) {
            addCriterion("bank_reconciliation_url =", value, "bankReconciliationUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankReconciliationUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_reconciliation_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlNotEqualTo(String value) {
            addCriterion("bank_reconciliation_url <>", value, "bankReconciliationUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankReconciliationUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_reconciliation_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlGreaterThan(String value) {
            addCriterion("bank_reconciliation_url >", value, "bankReconciliationUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankReconciliationUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_reconciliation_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlGreaterThanOrEqualTo(String value) {
            addCriterion("bank_reconciliation_url >=", value, "bankReconciliationUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankReconciliationUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_reconciliation_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlLessThan(String value) {
            addCriterion("bank_reconciliation_url <", value, "bankReconciliationUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankReconciliationUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_reconciliation_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlLessThanOrEqualTo(String value) {
            addCriterion("bank_reconciliation_url <=", value, "bankReconciliationUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankReconciliationUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_reconciliation_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlLike(String value) {
            addCriterion("bank_reconciliation_url like", value, "bankReconciliationUrl");
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlNotLike(String value) {
            addCriterion("bank_reconciliation_url not like", value, "bankReconciliationUrl");
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlIn(List<String> values) {
            addCriterion("bank_reconciliation_url in", values, "bankReconciliationUrl");
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlNotIn(List<String> values) {
            addCriterion("bank_reconciliation_url not in", values, "bankReconciliationUrl");
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlBetween(String value1, String value2) {
            addCriterion("bank_reconciliation_url between", value1, value2, "bankReconciliationUrl");
            return (Criteria) this;
        }

        public Criteria andBankReconciliationUrlNotBetween(String value1, String value2) {
            addCriterion("bank_reconciliation_url not between", value1, value2, "bankReconciliationUrl");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlIsNull() {
            addCriterion("surety_id_card_url is null");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlIsNotNull() {
            addCriterion("surety_id_card_url is not null");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlEqualTo(String value) {
            addCriterion("surety_id_card_url =", value, "suretyIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlNotEqualTo(String value) {
            addCriterion("surety_id_card_url <>", value, "suretyIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlGreaterThan(String value) {
            addCriterion("surety_id_card_url >", value, "suretyIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlGreaterThanOrEqualTo(String value) {
            addCriterion("surety_id_card_url >=", value, "suretyIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlLessThan(String value) {
            addCriterion("surety_id_card_url <", value, "suretyIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlLessThanOrEqualTo(String value) {
            addCriterion("surety_id_card_url <=", value, "suretyIdCardUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlLike(String value) {
            addCriterion("surety_id_card_url like", value, "suretyIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlNotLike(String value) {
            addCriterion("surety_id_card_url not like", value, "suretyIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlIn(List<String> values) {
            addCriterion("surety_id_card_url in", values, "suretyIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlNotIn(List<String> values) {
            addCriterion("surety_id_card_url not in", values, "suretyIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlBetween(String value1, String value2) {
            addCriterion("surety_id_card_url between", value1, value2, "suretyIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrlNotBetween(String value1, String value2) {
            addCriterion("surety_id_card_url not between", value1, value2, "suretyIdCardUrl");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2IsNull() {
            addCriterion("surety_id_card_url_2 is null");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2IsNotNull() {
            addCriterion("surety_id_card_url_2 is not null");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2EqualTo(String value) {
            addCriterion("surety_id_card_url_2 =", value, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrl2EqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url_2 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2NotEqualTo(String value) {
            addCriterion("surety_id_card_url_2 <>", value, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrl2NotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url_2 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2GreaterThan(String value) {
            addCriterion("surety_id_card_url_2 >", value, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrl2GreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url_2 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2GreaterThanOrEqualTo(String value) {
            addCriterion("surety_id_card_url_2 >=", value, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrl2GreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url_2 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2LessThan(String value) {
            addCriterion("surety_id_card_url_2 <", value, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrl2LessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url_2 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2LessThanOrEqualTo(String value) {
            addCriterion("surety_id_card_url_2 <=", value, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSuretyIdCardUrl2LessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("surety_id_card_url_2 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2Like(String value) {
            addCriterion("surety_id_card_url_2 like", value, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2NotLike(String value) {
            addCriterion("surety_id_card_url_2 not like", value, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2In(List<String> values) {
            addCriterion("surety_id_card_url_2 in", values, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2NotIn(List<String> values) {
            addCriterion("surety_id_card_url_2 not in", values, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2Between(String value1, String value2) {
            addCriterion("surety_id_card_url_2 between", value1, value2, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andSuretyIdCardUrl2NotBetween(String value1, String value2) {
            addCriterion("surety_id_card_url_2 not between", value1, value2, "suretyIdCardUrl2");
            return (Criteria) this;
        }

        public Criteria andAssetUrlIsNull() {
            addCriterion("asset_url is null");
            return (Criteria) this;
        }

        public Criteria andAssetUrlIsNotNull() {
            addCriterion("asset_url is not null");
            return (Criteria) this;
        }

        public Criteria andAssetUrlEqualTo(String value) {
            addCriterion("asset_url =", value, "assetUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAssetUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("asset_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetUrlNotEqualTo(String value) {
            addCriterion("asset_url <>", value, "assetUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAssetUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("asset_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetUrlGreaterThan(String value) {
            addCriterion("asset_url >", value, "assetUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAssetUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("asset_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetUrlGreaterThanOrEqualTo(String value) {
            addCriterion("asset_url >=", value, "assetUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAssetUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("asset_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetUrlLessThan(String value) {
            addCriterion("asset_url <", value, "assetUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAssetUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("asset_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetUrlLessThanOrEqualTo(String value) {
            addCriterion("asset_url <=", value, "assetUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAssetUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("asset_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetUrlLike(String value) {
            addCriterion("asset_url like", value, "assetUrl");
            return (Criteria) this;
        }

        public Criteria andAssetUrlNotLike(String value) {
            addCriterion("asset_url not like", value, "assetUrl");
            return (Criteria) this;
        }

        public Criteria andAssetUrlIn(List<String> values) {
            addCriterion("asset_url in", values, "assetUrl");
            return (Criteria) this;
        }

        public Criteria andAssetUrlNotIn(List<String> values) {
            addCriterion("asset_url not in", values, "assetUrl");
            return (Criteria) this;
        }

        public Criteria andAssetUrlBetween(String value1, String value2) {
            addCriterion("asset_url between", value1, value2, "assetUrl");
            return (Criteria) this;
        }

        public Criteria andAssetUrlNotBetween(String value1, String value2) {
            addCriterion("asset_url not between", value1, value2, "assetUrl");
            return (Criteria) this;
        }

        public Criteria andJobUrlIsNull() {
            addCriterion("job_url is null");
            return (Criteria) this;
        }

        public Criteria andJobUrlIsNotNull() {
            addCriterion("job_url is not null");
            return (Criteria) this;
        }

        public Criteria andJobUrlEqualTo(String value) {
            addCriterion("job_url =", value, "jobUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrlNotEqualTo(String value) {
            addCriterion("job_url <>", value, "jobUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrlGreaterThan(String value) {
            addCriterion("job_url >", value, "jobUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrlGreaterThanOrEqualTo(String value) {
            addCriterion("job_url >=", value, "jobUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrlLessThan(String value) {
            addCriterion("job_url <", value, "jobUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrlLessThanOrEqualTo(String value) {
            addCriterion("job_url <=", value, "jobUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrlLike(String value) {
            addCriterion("job_url like", value, "jobUrl");
            return (Criteria) this;
        }

        public Criteria andJobUrlNotLike(String value) {
            addCriterion("job_url not like", value, "jobUrl");
            return (Criteria) this;
        }

        public Criteria andJobUrlIn(List<String> values) {
            addCriterion("job_url in", values, "jobUrl");
            return (Criteria) this;
        }

        public Criteria andJobUrlNotIn(List<String> values) {
            addCriterion("job_url not in", values, "jobUrl");
            return (Criteria) this;
        }

        public Criteria andJobUrlBetween(String value1, String value2) {
            addCriterion("job_url between", value1, value2, "jobUrl");
            return (Criteria) this;
        }

        public Criteria andJobUrlNotBetween(String value1, String value2) {
            addCriterion("job_url not between", value1, value2, "jobUrl");
            return (Criteria) this;
        }

        public Criteria andJobUrl2IsNull() {
            addCriterion("job_url_2 is null");
            return (Criteria) this;
        }

        public Criteria andJobUrl2IsNotNull() {
            addCriterion("job_url_2 is not null");
            return (Criteria) this;
        }

        public Criteria andJobUrl2EqualTo(String value) {
            addCriterion("job_url_2 =", value, "jobUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrl2EqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url_2 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrl2NotEqualTo(String value) {
            addCriterion("job_url_2 <>", value, "jobUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrl2NotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url_2 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrl2GreaterThan(String value) {
            addCriterion("job_url_2 >", value, "jobUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrl2GreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url_2 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrl2GreaterThanOrEqualTo(String value) {
            addCriterion("job_url_2 >=", value, "jobUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrl2GreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url_2 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrl2LessThan(String value) {
            addCriterion("job_url_2 <", value, "jobUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrl2LessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url_2 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrl2LessThanOrEqualTo(String value) {
            addCriterion("job_url_2 <=", value, "jobUrl2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andJobUrl2LessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("job_url_2 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobUrl2Like(String value) {
            addCriterion("job_url_2 like", value, "jobUrl2");
            return (Criteria) this;
        }

        public Criteria andJobUrl2NotLike(String value) {
            addCriterion("job_url_2 not like", value, "jobUrl2");
            return (Criteria) this;
        }

        public Criteria andJobUrl2In(List<String> values) {
            addCriterion("job_url_2 in", values, "jobUrl2");
            return (Criteria) this;
        }

        public Criteria andJobUrl2NotIn(List<String> values) {
            addCriterion("job_url_2 not in", values, "jobUrl2");
            return (Criteria) this;
        }

        public Criteria andJobUrl2Between(String value1, String value2) {
            addCriterion("job_url_2 between", value1, value2, "jobUrl2");
            return (Criteria) this;
        }

        public Criteria andJobUrl2NotBetween(String value1, String value2) {
            addCriterion("job_url_2 not between", value1, value2, "jobUrl2");
            return (Criteria) this;
        }

        public Criteria andMortgageUrlIsNull() {
            addCriterion("mortgage_url is null");
            return (Criteria) this;
        }

        public Criteria andMortgageUrlIsNotNull() {
            addCriterion("mortgage_url is not null");
            return (Criteria) this;
        }

        public Criteria andMortgageUrlEqualTo(String value) {
            addCriterion("mortgage_url =", value, "mortgageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMortgageUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("mortgage_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMortgageUrlNotEqualTo(String value) {
            addCriterion("mortgage_url <>", value, "mortgageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMortgageUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("mortgage_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMortgageUrlGreaterThan(String value) {
            addCriterion("mortgage_url >", value, "mortgageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMortgageUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("mortgage_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMortgageUrlGreaterThanOrEqualTo(String value) {
            addCriterion("mortgage_url >=", value, "mortgageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMortgageUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("mortgage_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMortgageUrlLessThan(String value) {
            addCriterion("mortgage_url <", value, "mortgageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMortgageUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("mortgage_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMortgageUrlLessThanOrEqualTo(String value) {
            addCriterion("mortgage_url <=", value, "mortgageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andMortgageUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("mortgage_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMortgageUrlLike(String value) {
            addCriterion("mortgage_url like", value, "mortgageUrl");
            return (Criteria) this;
        }

        public Criteria andMortgageUrlNotLike(String value) {
            addCriterion("mortgage_url not like", value, "mortgageUrl");
            return (Criteria) this;
        }

        public Criteria andMortgageUrlIn(List<String> values) {
            addCriterion("mortgage_url in", values, "mortgageUrl");
            return (Criteria) this;
        }

        public Criteria andMortgageUrlNotIn(List<String> values) {
            addCriterion("mortgage_url not in", values, "mortgageUrl");
            return (Criteria) this;
        }

        public Criteria andMortgageUrlBetween(String value1, String value2) {
            addCriterion("mortgage_url between", value1, value2, "mortgageUrl");
            return (Criteria) this;
        }

        public Criteria andMortgageUrlNotBetween(String value1, String value2) {
            addCriterion("mortgage_url not between", value1, value2, "mortgageUrl");
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlIsNull() {
            addCriterion("guarantee_statement_url is null");
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlIsNotNull() {
            addCriterion("guarantee_statement_url is not null");
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlEqualTo(String value) {
            addCriterion("guarantee_statement_url =", value, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeStatementUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("guarantee_statement_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlNotEqualTo(String value) {
            addCriterion("guarantee_statement_url <>", value, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeStatementUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("guarantee_statement_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlGreaterThan(String value) {
            addCriterion("guarantee_statement_url >", value, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeStatementUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("guarantee_statement_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlGreaterThanOrEqualTo(String value) {
            addCriterion("guarantee_statement_url >=", value, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeStatementUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("guarantee_statement_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlLessThan(String value) {
            addCriterion("guarantee_statement_url <", value, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeStatementUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("guarantee_statement_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlLessThanOrEqualTo(String value) {
            addCriterion("guarantee_statement_url <=", value, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeStatementUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("guarantee_statement_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlLike(String value) {
            addCriterion("guarantee_statement_url like", value, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlNotLike(String value) {
            addCriterion("guarantee_statement_url not like", value, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlIn(List<String> values) {
            addCriterion("guarantee_statement_url in", values, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlNotIn(List<String> values) {
            addCriterion("guarantee_statement_url not in", values, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlBetween(String value1, String value2) {
            addCriterion("guarantee_statement_url between", value1, value2, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        public Criteria andGuaranteeStatementUrlNotBetween(String value1, String value2) {
            addCriterion("guarantee_statement_url not between", value1, value2, "guaranteeStatementUrl");
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlIsNull() {
            addCriterion("employment_promotion_url is null");
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlIsNotNull() {
            addCriterion("employment_promotion_url is not null");
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlEqualTo(String value) {
            addCriterion("employment_promotion_url =", value, "employmentPromotionUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andEmploymentPromotionUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("employment_promotion_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlNotEqualTo(String value) {
            addCriterion("employment_promotion_url <>", value, "employmentPromotionUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andEmploymentPromotionUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("employment_promotion_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlGreaterThan(String value) {
            addCriterion("employment_promotion_url >", value, "employmentPromotionUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andEmploymentPromotionUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("employment_promotion_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlGreaterThanOrEqualTo(String value) {
            addCriterion("employment_promotion_url >=", value, "employmentPromotionUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andEmploymentPromotionUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("employment_promotion_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlLessThan(String value) {
            addCriterion("employment_promotion_url <", value, "employmentPromotionUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andEmploymentPromotionUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("employment_promotion_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlLessThanOrEqualTo(String value) {
            addCriterion("employment_promotion_url <=", value, "employmentPromotionUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andEmploymentPromotionUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("employment_promotion_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlLike(String value) {
            addCriterion("employment_promotion_url like", value, "employmentPromotionUrl");
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlNotLike(String value) {
            addCriterion("employment_promotion_url not like", value, "employmentPromotionUrl");
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlIn(List<String> values) {
            addCriterion("employment_promotion_url in", values, "employmentPromotionUrl");
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlNotIn(List<String> values) {
            addCriterion("employment_promotion_url not in", values, "employmentPromotionUrl");
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlBetween(String value1, String value2) {
            addCriterion("employment_promotion_url between", value1, value2, "employmentPromotionUrl");
            return (Criteria) this;
        }

        public Criteria andEmploymentPromotionUrlNotBetween(String value1, String value2) {
            addCriterion("employment_promotion_url not between", value1, value2, "employmentPromotionUrl");
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlIsNull() {
            addCriterion("pay_taxes_url is null");
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlIsNotNull() {
            addCriterion("pay_taxes_url is not null");
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlEqualTo(String value) {
            addCriterion("pay_taxes_url =", value, "payTaxesUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPayTaxesUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("pay_taxes_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlNotEqualTo(String value) {
            addCriterion("pay_taxes_url <>", value, "payTaxesUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPayTaxesUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("pay_taxes_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlGreaterThan(String value) {
            addCriterion("pay_taxes_url >", value, "payTaxesUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPayTaxesUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("pay_taxes_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlGreaterThanOrEqualTo(String value) {
            addCriterion("pay_taxes_url >=", value, "payTaxesUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPayTaxesUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("pay_taxes_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlLessThan(String value) {
            addCriterion("pay_taxes_url <", value, "payTaxesUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPayTaxesUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("pay_taxes_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlLessThanOrEqualTo(String value) {
            addCriterion("pay_taxes_url <=", value, "payTaxesUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andPayTaxesUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("pay_taxes_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlLike(String value) {
            addCriterion("pay_taxes_url like", value, "payTaxesUrl");
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlNotLike(String value) {
            addCriterion("pay_taxes_url not like", value, "payTaxesUrl");
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlIn(List<String> values) {
            addCriterion("pay_taxes_url in", values, "payTaxesUrl");
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlNotIn(List<String> values) {
            addCriterion("pay_taxes_url not in", values, "payTaxesUrl");
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlBetween(String value1, String value2) {
            addCriterion("pay_taxes_url between", value1, value2, "payTaxesUrl");
            return (Criteria) this;
        }

        public Criteria andPayTaxesUrlNotBetween(String value1, String value2) {
            addCriterion("pay_taxes_url not between", value1, value2, "payTaxesUrl");
            return (Criteria) this;
        }

        public Criteria andExtraUrlIsNull() {
            addCriterion("extra_url is null");
            return (Criteria) this;
        }

        public Criteria andExtraUrlIsNotNull() {
            addCriterion("extra_url is not null");
            return (Criteria) this;
        }

        public Criteria andExtraUrlEqualTo(String value) {
            addCriterion("extra_url =", value, "extraUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andExtraUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("extra_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtraUrlNotEqualTo(String value) {
            addCriterion("extra_url <>", value, "extraUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andExtraUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("extra_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtraUrlGreaterThan(String value) {
            addCriterion("extra_url >", value, "extraUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andExtraUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("extra_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtraUrlGreaterThanOrEqualTo(String value) {
            addCriterion("extra_url >=", value, "extraUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andExtraUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("extra_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtraUrlLessThan(String value) {
            addCriterion("extra_url <", value, "extraUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andExtraUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("extra_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtraUrlLessThanOrEqualTo(String value) {
            addCriterion("extra_url <=", value, "extraUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andExtraUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("extra_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtraUrlLike(String value) {
            addCriterion("extra_url like", value, "extraUrl");
            return (Criteria) this;
        }

        public Criteria andExtraUrlNotLike(String value) {
            addCriterion("extra_url not like", value, "extraUrl");
            return (Criteria) this;
        }

        public Criteria andExtraUrlIn(List<String> values) {
            addCriterion("extra_url in", values, "extraUrl");
            return (Criteria) this;
        }

        public Criteria andExtraUrlNotIn(List<String> values) {
            addCriterion("extra_url not in", values, "extraUrl");
            return (Criteria) this;
        }

        public Criteria andExtraUrlBetween(String value1, String value2) {
            addCriterion("extra_url between", value1, value2, "extraUrl");
            return (Criteria) this;
        }

        public Criteria andExtraUrlNotBetween(String value1, String value2) {
            addCriterion("extra_url not between", value1, value2, "extraUrl");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andSubmitStatusIsNull() {
            addCriterion("submit_status is null");
            return (Criteria) this;
        }

        public Criteria andSubmitStatusIsNotNull() {
            addCriterion("submit_status is not null");
            return (Criteria) this;
        }

        public Criteria andSubmitStatusEqualTo(Integer value) {
            addCriterion("submit_status =", value, "submitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSubmitStatusEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("submit_status = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitStatusNotEqualTo(Integer value) {
            addCriterion("submit_status <>", value, "submitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSubmitStatusNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("submit_status <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitStatusGreaterThan(Integer value) {
            addCriterion("submit_status >", value, "submitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSubmitStatusGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("submit_status > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("submit_status >=", value, "submitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSubmitStatusGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("submit_status >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitStatusLessThan(Integer value) {
            addCriterion("submit_status <", value, "submitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSubmitStatusLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("submit_status < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitStatusLessThanOrEqualTo(Integer value) {
            addCriterion("submit_status <=", value, "submitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andSubmitStatusLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("submit_status <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubmitStatusIn(List<Integer> values) {
            addCriterion("submit_status in", values, "submitStatus");
            return (Criteria) this;
        }

        public Criteria andSubmitStatusNotIn(List<Integer> values) {
            addCriterion("submit_status not in", values, "submitStatus");
            return (Criteria) this;
        }

        public Criteria andSubmitStatusBetween(Integer value1, Integer value2) {
            addCriterion("submit_status between", value1, value2, "submitStatus");
            return (Criteria) this;
        }

        public Criteria andSubmitStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("submit_status not between", value1, value2, "submitStatus");
            return (Criteria) this;
        }

        public Criteria andIsAvailableIsNull() {
            addCriterion("is_available is null");
            return (Criteria) this;
        }

        public Criteria andIsAvailableIsNotNull() {
            addCriterion("is_available is not null");
            return (Criteria) this;
        }

        public Criteria andIsAvailableEqualTo(Boolean value) {
            addCriterion("is_available =", value, "isAvailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIsAvailableEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("is_available = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsAvailableNotEqualTo(Boolean value) {
            addCriterion("is_available <>", value, "isAvailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIsAvailableNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("is_available <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsAvailableGreaterThan(Boolean value) {
            addCriterion("is_available >", value, "isAvailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIsAvailableGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("is_available > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsAvailableGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_available >=", value, "isAvailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIsAvailableGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("is_available >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsAvailableLessThan(Boolean value) {
            addCriterion("is_available <", value, "isAvailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIsAvailableLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("is_available < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsAvailableLessThanOrEqualTo(Boolean value) {
            addCriterion("is_available <=", value, "isAvailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andIsAvailableLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("is_available <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsAvailableIn(List<Boolean> values) {
            addCriterion("is_available in", values, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableNotIn(List<Boolean> values) {
            addCriterion("is_available not in", values, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableBetween(Boolean value1, Boolean value2) {
            addCriterion("is_available between", value1, value2, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_available not between", value1, value2, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andBankIdIsNull() {
            addCriterion("bank_id is null");
            return (Criteria) this;
        }

        public Criteria andBankIdIsNotNull() {
            addCriterion("bank_id is not null");
            return (Criteria) this;
        }

        public Criteria andBankIdEqualTo(Integer[] value) {
            addBankIdCriterion("bank_id =", value, "bankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankIdEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankIdNotEqualTo(Integer[] value) {
            addBankIdCriterion("bank_id <>", value, "bankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankIdNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankIdGreaterThan(Integer[] value) {
            addBankIdCriterion("bank_id >", value, "bankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankIdGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankIdGreaterThanOrEqualTo(Integer[] value) {
            addBankIdCriterion("bank_id >=", value, "bankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankIdGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankIdLessThan(Integer[] value) {
            addBankIdCriterion("bank_id <", value, "bankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankIdLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankIdLessThanOrEqualTo(Integer[] value) {
            addBankIdCriterion("bank_id <=", value, "bankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBankIdLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("bank_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankIdLike(Integer[] value) {
            addBankIdCriterion("bank_id like", value, "bankId");
            return (Criteria) this;
        }

        public Criteria andBankIdNotLike(Integer[] value) {
            addBankIdCriterion("bank_id not like", value, "bankId");
            return (Criteria) this;
        }

        public Criteria andBankIdIn(List<Integer[]> values) {
            addBankIdCriterion("bank_id in", values, "bankId");
            return (Criteria) this;
        }

        public Criteria andBankIdNotIn(List<Integer[]> values) {
            addBankIdCriterion("bank_id not in", values, "bankId");
            return (Criteria) this;
        }

        public Criteria andBankIdBetween(Integer[] value1, Integer[] value2) {
            addBankIdCriterion("bank_id between", value1, value2, "bankId");
            return (Criteria) this;
        }

        public Criteria andBankIdNotBetween(Integer[] value1, Integer[] value2) {
            addBankIdCriterion("bank_id not between", value1, value2, "bankId");
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeIsNull() {
            addCriterion("hs_business_license_type is null");
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeIsNotNull() {
            addCriterion("hs_business_license_type is not null");
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeEqualTo(String value) {
            addCriterion("hs_business_license_type =", value, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsBusinessLicenseTypeEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_business_license_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeNotEqualTo(String value) {
            addCriterion("hs_business_license_type <>", value, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsBusinessLicenseTypeNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_business_license_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeGreaterThan(String value) {
            addCriterion("hs_business_license_type >", value, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsBusinessLicenseTypeGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_business_license_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeGreaterThanOrEqualTo(String value) {
            addCriterion("hs_business_license_type >=", value, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsBusinessLicenseTypeGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_business_license_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeLessThan(String value) {
            addCriterion("hs_business_license_type <", value, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsBusinessLicenseTypeLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_business_license_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeLessThanOrEqualTo(String value) {
            addCriterion("hs_business_license_type <=", value, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsBusinessLicenseTypeLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_business_license_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeLike(String value) {
            addCriterion("hs_business_license_type like", value, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeNotLike(String value) {
            addCriterion("hs_business_license_type not like", value, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeIn(List<String> values) {
            addCriterion("hs_business_license_type in", values, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeNotIn(List<String> values) {
            addCriterion("hs_business_license_type not in", values, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeBetween(String value1, String value2) {
            addCriterion("hs_business_license_type between", value1, value2, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        public Criteria andHsBusinessLicenseTypeNotBetween(String value1, String value2) {
            addCriterion("hs_business_license_type not between", value1, value2, "hsBusinessLicenseType");
            return (Criteria) this;
        }

        public Criteria andHsApplicantIsNull() {
            addCriterion("hs_applicant is null");
            return (Criteria) this;
        }

        public Criteria andHsApplicantIsNotNull() {
            addCriterion("hs_applicant is not null");
            return (Criteria) this;
        }

        public Criteria andHsApplicantEqualTo(String value) {
            addCriterion("hs_applicant =", value, "hsApplicant");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantNotEqualTo(String value) {
            addCriterion("hs_applicant <>", value, "hsApplicant");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantGreaterThan(String value) {
            addCriterion("hs_applicant >", value, "hsApplicant");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantGreaterThanOrEqualTo(String value) {
            addCriterion("hs_applicant >=", value, "hsApplicant");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantLessThan(String value) {
            addCriterion("hs_applicant <", value, "hsApplicant");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantLessThanOrEqualTo(String value) {
            addCriterion("hs_applicant <=", value, "hsApplicant");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantLike(String value) {
            addCriterion("hs_applicant like", value, "hsApplicant");
            return (Criteria) this;
        }

        public Criteria andHsApplicantNotLike(String value) {
            addCriterion("hs_applicant not like", value, "hsApplicant");
            return (Criteria) this;
        }

        public Criteria andHsApplicantIn(List<String> values) {
            addCriterion("hs_applicant in", values, "hsApplicant");
            return (Criteria) this;
        }

        public Criteria andHsApplicantNotIn(List<String> values) {
            addCriterion("hs_applicant not in", values, "hsApplicant");
            return (Criteria) this;
        }

        public Criteria andHsApplicantBetween(String value1, String value2) {
            addCriterion("hs_applicant between", value1, value2, "hsApplicant");
            return (Criteria) this;
        }

        public Criteria andHsApplicantNotBetween(String value1, String value2) {
            addCriterion("hs_applicant not between", value1, value2, "hsApplicant");
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeIsNull() {
            addCriterion("hs_unified_social_credit_code is null");
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeIsNotNull() {
            addCriterion("hs_unified_social_credit_code is not null");
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeEqualTo(String value) {
            addCriterion("hs_unified_social_credit_code =", value, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsUnifiedSocialCreditCodeEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_unified_social_credit_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeNotEqualTo(String value) {
            addCriterion("hs_unified_social_credit_code <>", value, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsUnifiedSocialCreditCodeNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_unified_social_credit_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeGreaterThan(String value) {
            addCriterion("hs_unified_social_credit_code >", value, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsUnifiedSocialCreditCodeGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_unified_social_credit_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeGreaterThanOrEqualTo(String value) {
            addCriterion("hs_unified_social_credit_code >=", value, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsUnifiedSocialCreditCodeGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_unified_social_credit_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeLessThan(String value) {
            addCriterion("hs_unified_social_credit_code <", value, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsUnifiedSocialCreditCodeLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_unified_social_credit_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeLessThanOrEqualTo(String value) {
            addCriterion("hs_unified_social_credit_code <=", value, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsUnifiedSocialCreditCodeLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_unified_social_credit_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeLike(String value) {
            addCriterion("hs_unified_social_credit_code like", value, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeNotLike(String value) {
            addCriterion("hs_unified_social_credit_code not like", value, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeIn(List<String> values) {
            addCriterion("hs_unified_social_credit_code in", values, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeNotIn(List<String> values) {
            addCriterion("hs_unified_social_credit_code not in", values, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeBetween(String value1, String value2) {
            addCriterion("hs_unified_social_credit_code between", value1, value2, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        public Criteria andHsUnifiedSocialCreditCodeNotBetween(String value1, String value2) {
            addCriterion("hs_unified_social_credit_code not between", value1, value2, "hsUnifiedSocialCreditCode");
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressIsNull() {
            addCriterion("hs_applicant_adress is null");
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressIsNotNull() {
            addCriterion("hs_applicant_adress is not null");
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressEqualTo(String value) {
            addCriterion("hs_applicant_adress =", value, "hsApplicantAdress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantAdressEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant_adress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressNotEqualTo(String value) {
            addCriterion("hs_applicant_adress <>", value, "hsApplicantAdress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantAdressNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant_adress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressGreaterThan(String value) {
            addCriterion("hs_applicant_adress >", value, "hsApplicantAdress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantAdressGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant_adress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressGreaterThanOrEqualTo(String value) {
            addCriterion("hs_applicant_adress >=", value, "hsApplicantAdress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantAdressGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant_adress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressLessThan(String value) {
            addCriterion("hs_applicant_adress <", value, "hsApplicantAdress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantAdressLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant_adress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressLessThanOrEqualTo(String value) {
            addCriterion("hs_applicant_adress <=", value, "hsApplicantAdress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsApplicantAdressLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_applicant_adress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressLike(String value) {
            addCriterion("hs_applicant_adress like", value, "hsApplicantAdress");
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressNotLike(String value) {
            addCriterion("hs_applicant_adress not like", value, "hsApplicantAdress");
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressIn(List<String> values) {
            addCriterion("hs_applicant_adress in", values, "hsApplicantAdress");
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressNotIn(List<String> values) {
            addCriterion("hs_applicant_adress not in", values, "hsApplicantAdress");
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressBetween(String value1, String value2) {
            addCriterion("hs_applicant_adress between", value1, value2, "hsApplicantAdress");
            return (Criteria) this;
        }

        public Criteria andHsApplicantAdressNotBetween(String value1, String value2) {
            addCriterion("hs_applicant_adress not between", value1, value2, "hsApplicantAdress");
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateIsNull() {
            addCriterion("hs_rigster_date is null");
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateIsNotNull() {
            addCriterion("hs_rigster_date is not null");
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateEqualTo(LocalDateTime value) {
            addCriterion("hs_rigster_date =", value, "hsRigsterDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRigsterDateEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_rigster_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateNotEqualTo(LocalDateTime value) {
            addCriterion("hs_rigster_date <>", value, "hsRigsterDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRigsterDateNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_rigster_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateGreaterThan(LocalDateTime value) {
            addCriterion("hs_rigster_date >", value, "hsRigsterDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRigsterDateGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_rigster_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("hs_rigster_date >=", value, "hsRigsterDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRigsterDateGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_rigster_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateLessThan(LocalDateTime value) {
            addCriterion("hs_rigster_date <", value, "hsRigsterDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRigsterDateLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_rigster_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("hs_rigster_date <=", value, "hsRigsterDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRigsterDateLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_rigster_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateIn(List<LocalDateTime> values) {
            addCriterion("hs_rigster_date in", values, "hsRigsterDate");
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateNotIn(List<LocalDateTime> values) {
            addCriterion("hs_rigster_date not in", values, "hsRigsterDate");
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("hs_rigster_date between", value1, value2, "hsRigsterDate");
            return (Criteria) this;
        }

        public Criteria andHsRigsterDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("hs_rigster_date not between", value1, value2, "hsRigsterDate");
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoIsNull() {
            addCriterion("hs_employment_business_license_no is null");
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoIsNotNull() {
            addCriterion("hs_employment_business_license_no is not null");
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoEqualTo(String value) {
            addCriterion("hs_employment_business_license_no =", value, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmploymentBusinessLicenseNoEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employment_business_license_no = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoNotEqualTo(String value) {
            addCriterion("hs_employment_business_license_no <>", value, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmploymentBusinessLicenseNoNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employment_business_license_no <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoGreaterThan(String value) {
            addCriterion("hs_employment_business_license_no >", value, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmploymentBusinessLicenseNoGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employment_business_license_no > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoGreaterThanOrEqualTo(String value) {
            addCriterion("hs_employment_business_license_no >=", value, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmploymentBusinessLicenseNoGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employment_business_license_no >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoLessThan(String value) {
            addCriterion("hs_employment_business_license_no <", value, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmploymentBusinessLicenseNoLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employment_business_license_no < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoLessThanOrEqualTo(String value) {
            addCriterion("hs_employment_business_license_no <=", value, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmploymentBusinessLicenseNoLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employment_business_license_no <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoLike(String value) {
            addCriterion("hs_employment_business_license_no like", value, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoNotLike(String value) {
            addCriterion("hs_employment_business_license_no not like", value, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoIn(List<String> values) {
            addCriterion("hs_employment_business_license_no in", values, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoNotIn(List<String> values) {
            addCriterion("hs_employment_business_license_no not in", values, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoBetween(String value1, String value2) {
            addCriterion("hs_employment_business_license_no between", value1, value2, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        public Criteria andHsEmploymentBusinessLicenseNoNotBetween(String value1, String value2) {
            addCriterion("hs_employment_business_license_no not between", value1, value2, "hsEmploymentBusinessLicenseNo");
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoIsNull() {
            addCriterion("hs_employees_info is null");
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoIsNotNull() {
            addCriterion("hs_employees_info is not null");
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoEqualTo(String value) {
            addCriterion("hs_employees_info =", value, "hsEmployeesInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmployeesInfoEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employees_info = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoNotEqualTo(String value) {
            addCriterion("hs_employees_info <>", value, "hsEmployeesInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmployeesInfoNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employees_info <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoGreaterThan(String value) {
            addCriterion("hs_employees_info >", value, "hsEmployeesInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmployeesInfoGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employees_info > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoGreaterThanOrEqualTo(String value) {
            addCriterion("hs_employees_info >=", value, "hsEmployeesInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmployeesInfoGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employees_info >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoLessThan(String value) {
            addCriterion("hs_employees_info <", value, "hsEmployeesInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmployeesInfoLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employees_info < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoLessThanOrEqualTo(String value) {
            addCriterion("hs_employees_info <=", value, "hsEmployeesInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsEmployeesInfoLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_employees_info <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoLike(String value) {
            addCriterion("hs_employees_info like", value, "hsEmployeesInfo");
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoNotLike(String value) {
            addCriterion("hs_employees_info not like", value, "hsEmployeesInfo");
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoIn(List<String> values) {
            addCriterion("hs_employees_info in", values, "hsEmployeesInfo");
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoNotIn(List<String> values) {
            addCriterion("hs_employees_info not in", values, "hsEmployeesInfo");
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoBetween(String value1, String value2) {
            addCriterion("hs_employees_info between", value1, value2, "hsEmployeesInfo");
            return (Criteria) this;
        }

        public Criteria andHsEmployeesInfoNotBetween(String value1, String value2) {
            addCriterion("hs_employees_info not between", value1, value2, "hsEmployeesInfo");
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesIsNull() {
            addCriterion("hs_active_employees is null");
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesIsNotNull() {
            addCriterion("hs_active_employees is not null");
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesEqualTo(Integer value) {
            addCriterion("hs_active_employees =", value, "hsActiveEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsActiveEmployeesEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_active_employees = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesNotEqualTo(Integer value) {
            addCriterion("hs_active_employees <>", value, "hsActiveEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsActiveEmployeesNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_active_employees <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesGreaterThan(Integer value) {
            addCriterion("hs_active_employees >", value, "hsActiveEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsActiveEmployeesGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_active_employees > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesGreaterThanOrEqualTo(Integer value) {
            addCriterion("hs_active_employees >=", value, "hsActiveEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsActiveEmployeesGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_active_employees >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesLessThan(Integer value) {
            addCriterion("hs_active_employees <", value, "hsActiveEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsActiveEmployeesLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_active_employees < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesLessThanOrEqualTo(Integer value) {
            addCriterion("hs_active_employees <=", value, "hsActiveEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsActiveEmployeesLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_active_employees <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesIn(List<Integer> values) {
            addCriterion("hs_active_employees in", values, "hsActiveEmployees");
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesNotIn(List<Integer> values) {
            addCriterion("hs_active_employees not in", values, "hsActiveEmployees");
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesBetween(Integer value1, Integer value2) {
            addCriterion("hs_active_employees between", value1, value2, "hsActiveEmployees");
            return (Criteria) this;
        }

        public Criteria andHsActiveEmployeesNotBetween(Integer value1, Integer value2) {
            addCriterion("hs_active_employees not between", value1, value2, "hsActiveEmployees");
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleIsNull() {
            addCriterion("hs_recruit_people is null");
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleIsNotNull() {
            addCriterion("hs_recruit_people is not null");
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleEqualTo(Integer value) {
            addCriterion("hs_recruit_people =", value, "hsRecruitPeople");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecruitPeopleEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recruit_people = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleNotEqualTo(Integer value) {
            addCriterion("hs_recruit_people <>", value, "hsRecruitPeople");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecruitPeopleNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recruit_people <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleGreaterThan(Integer value) {
            addCriterion("hs_recruit_people >", value, "hsRecruitPeople");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecruitPeopleGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recruit_people > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleGreaterThanOrEqualTo(Integer value) {
            addCriterion("hs_recruit_people >=", value, "hsRecruitPeople");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecruitPeopleGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recruit_people >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleLessThan(Integer value) {
            addCriterion("hs_recruit_people <", value, "hsRecruitPeople");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecruitPeopleLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recruit_people < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleLessThanOrEqualTo(Integer value) {
            addCriterion("hs_recruit_people <=", value, "hsRecruitPeople");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecruitPeopleLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recruit_people <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleIn(List<Integer> values) {
            addCriterion("hs_recruit_people in", values, "hsRecruitPeople");
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleNotIn(List<Integer> values) {
            addCriterion("hs_recruit_people not in", values, "hsRecruitPeople");
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleBetween(Integer value1, Integer value2) {
            addCriterion("hs_recruit_people between", value1, value2, "hsRecruitPeople");
            return (Criteria) this;
        }

        public Criteria andHsRecruitPeopleNotBetween(Integer value1, Integer value2) {
            addCriterion("hs_recruit_people not between", value1, value2, "hsRecruitPeople");
            return (Criteria) this;
        }

        public Criteria andHsMarkIsNull() {
            addCriterion("hs_mark is null");
            return (Criteria) this;
        }

        public Criteria andHsMarkIsNotNull() {
            addCriterion("hs_mark is not null");
            return (Criteria) this;
        }

        public Criteria andHsMarkEqualTo(String value) {
            addCriterion("hs_mark =", value, "hsMark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsMarkEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_mark = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsMarkNotEqualTo(String value) {
            addCriterion("hs_mark <>", value, "hsMark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsMarkNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_mark <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsMarkGreaterThan(String value) {
            addCriterion("hs_mark >", value, "hsMark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsMarkGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_mark > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsMarkGreaterThanOrEqualTo(String value) {
            addCriterion("hs_mark >=", value, "hsMark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsMarkGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_mark >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsMarkLessThan(String value) {
            addCriterion("hs_mark <", value, "hsMark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsMarkLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_mark < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsMarkLessThanOrEqualTo(String value) {
            addCriterion("hs_mark <=", value, "hsMark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsMarkLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_mark <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsMarkLike(String value) {
            addCriterion("hs_mark like", value, "hsMark");
            return (Criteria) this;
        }

        public Criteria andHsMarkNotLike(String value) {
            addCriterion("hs_mark not like", value, "hsMark");
            return (Criteria) this;
        }

        public Criteria andHsMarkIn(List<String> values) {
            addCriterion("hs_mark in", values, "hsMark");
            return (Criteria) this;
        }

        public Criteria andHsMarkNotIn(List<String> values) {
            addCriterion("hs_mark not in", values, "hsMark");
            return (Criteria) this;
        }

        public Criteria andHsMarkBetween(String value1, String value2) {
            addCriterion("hs_mark between", value1, value2, "hsMark");
            return (Criteria) this;
        }

        public Criteria andHsMarkNotBetween(String value1, String value2) {
            addCriterion("hs_mark not between", value1, value2, "hsMark");
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateIsNull() {
            addCriterion("hs_recuit_rate is null");
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateIsNotNull() {
            addCriterion("hs_recuit_rate is not null");
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateEqualTo(String value) {
            addCriterion("hs_recuit_rate =", value, "hsRecuitRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecuitRateEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recuit_rate = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateNotEqualTo(String value) {
            addCriterion("hs_recuit_rate <>", value, "hsRecuitRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecuitRateNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recuit_rate <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateGreaterThan(String value) {
            addCriterion("hs_recuit_rate >", value, "hsRecuitRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecuitRateGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recuit_rate > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateGreaterThanOrEqualTo(String value) {
            addCriterion("hs_recuit_rate >=", value, "hsRecuitRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecuitRateGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recuit_rate >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateLessThan(String value) {
            addCriterion("hs_recuit_rate <", value, "hsRecuitRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecuitRateLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recuit_rate < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateLessThanOrEqualTo(String value) {
            addCriterion("hs_recuit_rate <=", value, "hsRecuitRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsRecuitRateLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_recuit_rate <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateLike(String value) {
            addCriterion("hs_recuit_rate like", value, "hsRecuitRate");
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateNotLike(String value) {
            addCriterion("hs_recuit_rate not like", value, "hsRecuitRate");
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateIn(List<String> values) {
            addCriterion("hs_recuit_rate in", values, "hsRecuitRate");
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateNotIn(List<String> values) {
            addCriterion("hs_recuit_rate not in", values, "hsRecuitRate");
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateBetween(String value1, String value2) {
            addCriterion("hs_recuit_rate between", value1, value2, "hsRecuitRate");
            return (Criteria) this;
        }

        public Criteria andHsRecuitRateNotBetween(String value1, String value2) {
            addCriterion("hs_recuit_rate not between", value1, value2, "hsRecuitRate");
            return (Criteria) this;
        }

        public Criteria andHsCommentIsNull() {
            addCriterion("hs_comment is null");
            return (Criteria) this;
        }

        public Criteria andHsCommentIsNotNull() {
            addCriterion("hs_comment is not null");
            return (Criteria) this;
        }

        public Criteria andHsCommentEqualTo(String value) {
            addCriterion("hs_comment =", value, "hsComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsCommentEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_comment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsCommentNotEqualTo(String value) {
            addCriterion("hs_comment <>", value, "hsComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsCommentNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_comment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsCommentGreaterThan(String value) {
            addCriterion("hs_comment >", value, "hsComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsCommentGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_comment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsCommentGreaterThanOrEqualTo(String value) {
            addCriterion("hs_comment >=", value, "hsComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsCommentGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_comment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsCommentLessThan(String value) {
            addCriterion("hs_comment <", value, "hsComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsCommentLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_comment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsCommentLessThanOrEqualTo(String value) {
            addCriterion("hs_comment <=", value, "hsComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsCommentLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_comment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsCommentLike(String value) {
            addCriterion("hs_comment like", value, "hsComment");
            return (Criteria) this;
        }

        public Criteria andHsCommentNotLike(String value) {
            addCriterion("hs_comment not like", value, "hsComment");
            return (Criteria) this;
        }

        public Criteria andHsCommentIn(List<String> values) {
            addCriterion("hs_comment in", values, "hsComment");
            return (Criteria) this;
        }

        public Criteria andHsCommentNotIn(List<String> values) {
            addCriterion("hs_comment not in", values, "hsComment");
            return (Criteria) this;
        }

        public Criteria andHsCommentBetween(String value1, String value2) {
            addCriterion("hs_comment between", value1, value2, "hsComment");
            return (Criteria) this;
        }

        public Criteria andHsCommentNotBetween(String value1, String value2) {
            addCriterion("hs_comment not between", value1, value2, "hsComment");
            return (Criteria) this;
        }

        public Criteria andHsAuditDateIsNull() {
            addCriterion("hs_audit_date is null");
            return (Criteria) this;
        }

        public Criteria andHsAuditDateIsNotNull() {
            addCriterion("hs_audit_date is not null");
            return (Criteria) this;
        }

        public Criteria andHsAuditDateEqualTo(LocalDateTime value) {
            addCriterion("hs_audit_date =", value, "hsAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsAuditDateEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_audit_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsAuditDateNotEqualTo(LocalDateTime value) {
            addCriterion("hs_audit_date <>", value, "hsAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsAuditDateNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_audit_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsAuditDateGreaterThan(LocalDateTime value) {
            addCriterion("hs_audit_date >", value, "hsAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsAuditDateGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_audit_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsAuditDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("hs_audit_date >=", value, "hsAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsAuditDateGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_audit_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsAuditDateLessThan(LocalDateTime value) {
            addCriterion("hs_audit_date <", value, "hsAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsAuditDateLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_audit_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsAuditDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("hs_audit_date <=", value, "hsAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsAuditDateLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_audit_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsAuditDateIn(List<LocalDateTime> values) {
            addCriterion("hs_audit_date in", values, "hsAuditDate");
            return (Criteria) this;
        }

        public Criteria andHsAuditDateNotIn(List<LocalDateTime> values) {
            addCriterion("hs_audit_date not in", values, "hsAuditDate");
            return (Criteria) this;
        }

        public Criteria andHsAuditDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("hs_audit_date between", value1, value2, "hsAuditDate");
            return (Criteria) this;
        }

        public Criteria andHsAuditDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("hs_audit_date not between", value1, value2, "hsAuditDate");
            return (Criteria) this;
        }

        public Criteria andHsOperatorIsNull() {
            addCriterion("hs_operator is null");
            return (Criteria) this;
        }

        public Criteria andHsOperatorIsNotNull() {
            addCriterion("hs_operator is not null");
            return (Criteria) this;
        }

        public Criteria andHsOperatorEqualTo(String value) {
            addCriterion("hs_operator =", value, "hsOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsOperatorEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_operator = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsOperatorNotEqualTo(String value) {
            addCriterion("hs_operator <>", value, "hsOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsOperatorNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_operator <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsOperatorGreaterThan(String value) {
            addCriterion("hs_operator >", value, "hsOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsOperatorGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_operator > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsOperatorGreaterThanOrEqualTo(String value) {
            addCriterion("hs_operator >=", value, "hsOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsOperatorGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_operator >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsOperatorLessThan(String value) {
            addCriterion("hs_operator <", value, "hsOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsOperatorLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_operator < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsOperatorLessThanOrEqualTo(String value) {
            addCriterion("hs_operator <=", value, "hsOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsOperatorLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_operator <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsOperatorLike(String value) {
            addCriterion("hs_operator like", value, "hsOperator");
            return (Criteria) this;
        }

        public Criteria andHsOperatorNotLike(String value) {
            addCriterion("hs_operator not like", value, "hsOperator");
            return (Criteria) this;
        }

        public Criteria andHsOperatorIn(List<String> values) {
            addCriterion("hs_operator in", values, "hsOperator");
            return (Criteria) this;
        }

        public Criteria andHsOperatorNotIn(List<String> values) {
            addCriterion("hs_operator not in", values, "hsOperator");
            return (Criteria) this;
        }

        public Criteria andHsOperatorBetween(String value1, String value2) {
            addCriterion("hs_operator between", value1, value2, "hsOperator");
            return (Criteria) this;
        }

        public Criteria andHsOperatorNotBetween(String value1, String value2) {
            addCriterion("hs_operator not between", value1, value2, "hsOperator");
            return (Criteria) this;
        }

        public Criteria andHsTopAmountIsNull() {
            addCriterion("hs_top_amount is null");
            return (Criteria) this;
        }

        public Criteria andHsTopAmountIsNotNull() {
            addCriterion("hs_top_amount is not null");
            return (Criteria) this;
        }

        public Criteria andHsTopAmountEqualTo(BigDecimal value) {
            addCriterion("hs_top_amount =", value, "hsTopAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsTopAmountEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_top_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsTopAmountNotEqualTo(BigDecimal value) {
            addCriterion("hs_top_amount <>", value, "hsTopAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsTopAmountNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_top_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsTopAmountGreaterThan(BigDecimal value) {
            addCriterion("hs_top_amount >", value, "hsTopAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsTopAmountGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_top_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsTopAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("hs_top_amount >=", value, "hsTopAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsTopAmountGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_top_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsTopAmountLessThan(BigDecimal value) {
            addCriterion("hs_top_amount <", value, "hsTopAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsTopAmountLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_top_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsTopAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("hs_top_amount <=", value, "hsTopAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsTopAmountLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_top_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsTopAmountIn(List<BigDecimal> values) {
            addCriterion("hs_top_amount in", values, "hsTopAmount");
            return (Criteria) this;
        }

        public Criteria andHsTopAmountNotIn(List<BigDecimal> values) {
            addCriterion("hs_top_amount not in", values, "hsTopAmount");
            return (Criteria) this;
        }

        public Criteria andHsTopAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("hs_top_amount between", value1, value2, "hsTopAmount");
            return (Criteria) this;
        }

        public Criteria andHsTopAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("hs_top_amount not between", value1, value2, "hsTopAmount");
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlIsNull() {
            addCriterion("hs_extra_pic_url is null");
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlIsNotNull() {
            addCriterion("hs_extra_pic_url is not null");
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlEqualTo(String[] value) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url =", value, "hsExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsExtraPicUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_extra_pic_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlNotEqualTo(String[] value) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url <>", value, "hsExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsExtraPicUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_extra_pic_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlGreaterThan(String[] value) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url >", value, "hsExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsExtraPicUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_extra_pic_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlGreaterThanOrEqualTo(String[] value) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url >=", value, "hsExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsExtraPicUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_extra_pic_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlLessThan(String[] value) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url <", value, "hsExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsExtraPicUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_extra_pic_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlLessThanOrEqualTo(String[] value) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url <=", value, "hsExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andHsExtraPicUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("hs_extra_pic_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlLike(String[] value) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url like", value, "hsExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlNotLike(String[] value) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url not like", value, "hsExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlIn(List<String[]> values) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url in", values, "hsExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlNotIn(List<String[]> values) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url not in", values, "hsExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlBetween(String[] value1, String[] value2) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url between", value1, value2, "hsExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andHsExtraPicUrlNotBetween(String[] value1, String[] value2) {
            addHsExtraPicUrlCriterion("hs_extra_pic_url not between", value1, value2, "hsExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressIsNull() {
            addCriterion("sc_business_address is null");
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressIsNotNull() {
            addCriterion("sc_business_address is not null");
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressEqualTo(String value) {
            addCriterion("sc_business_address =", value, "scBusinessAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScBusinessAddressEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_business_address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressNotEqualTo(String value) {
            addCriterion("sc_business_address <>", value, "scBusinessAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScBusinessAddressNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_business_address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressGreaterThan(String value) {
            addCriterion("sc_business_address >", value, "scBusinessAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScBusinessAddressGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_business_address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressGreaterThanOrEqualTo(String value) {
            addCriterion("sc_business_address >=", value, "scBusinessAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScBusinessAddressGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_business_address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressLessThan(String value) {
            addCriterion("sc_business_address <", value, "scBusinessAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScBusinessAddressLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_business_address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressLessThanOrEqualTo(String value) {
            addCriterion("sc_business_address <=", value, "scBusinessAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScBusinessAddressLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_business_address <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressLike(String value) {
            addCriterion("sc_business_address like", value, "scBusinessAddress");
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressNotLike(String value) {
            addCriterion("sc_business_address not like", value, "scBusinessAddress");
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressIn(List<String> values) {
            addCriterion("sc_business_address in", values, "scBusinessAddress");
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressNotIn(List<String> values) {
            addCriterion("sc_business_address not in", values, "scBusinessAddress");
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressBetween(String value1, String value2) {
            addCriterion("sc_business_address between", value1, value2, "scBusinessAddress");
            return (Criteria) this;
        }

        public Criteria andScBusinessAddressNotBetween(String value1, String value2) {
            addCriterion("sc_business_address not between", value1, value2, "scBusinessAddress");
            return (Criteria) this;
        }

        public Criteria andScPropertyRightIsNull() {
            addCriterion("sc_property_right is null");
            return (Criteria) this;
        }

        public Criteria andScPropertyRightIsNotNull() {
            addCriterion("sc_property_right is not null");
            return (Criteria) this;
        }

        public Criteria andScPropertyRightEqualTo(String value) {
            addCriterion("sc_property_right =", value, "scPropertyRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScPropertyRightEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_property_right = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScPropertyRightNotEqualTo(String value) {
            addCriterion("sc_property_right <>", value, "scPropertyRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScPropertyRightNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_property_right <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScPropertyRightGreaterThan(String value) {
            addCriterion("sc_property_right >", value, "scPropertyRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScPropertyRightGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_property_right > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScPropertyRightGreaterThanOrEqualTo(String value) {
            addCriterion("sc_property_right >=", value, "scPropertyRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScPropertyRightGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_property_right >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScPropertyRightLessThan(String value) {
            addCriterion("sc_property_right <", value, "scPropertyRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScPropertyRightLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_property_right < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScPropertyRightLessThanOrEqualTo(String value) {
            addCriterion("sc_property_right <=", value, "scPropertyRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScPropertyRightLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_property_right <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScPropertyRightLike(String value) {
            addCriterion("sc_property_right like", value, "scPropertyRight");
            return (Criteria) this;
        }

        public Criteria andScPropertyRightNotLike(String value) {
            addCriterion("sc_property_right not like", value, "scPropertyRight");
            return (Criteria) this;
        }

        public Criteria andScPropertyRightIn(List<String> values) {
            addCriterion("sc_property_right in", values, "scPropertyRight");
            return (Criteria) this;
        }

        public Criteria andScPropertyRightNotIn(List<String> values) {
            addCriterion("sc_property_right not in", values, "scPropertyRight");
            return (Criteria) this;
        }

        public Criteria andScPropertyRightBetween(String value1, String value2) {
            addCriterion("sc_property_right between", value1, value2, "scPropertyRight");
            return (Criteria) this;
        }

        public Criteria andScPropertyRightNotBetween(String value1, String value2) {
            addCriterion("sc_property_right not between", value1, value2, "scPropertyRight");
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportIsNull() {
            addCriterion("sc_applicant_credit_report is null");
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportIsNotNull() {
            addCriterion("sc_applicant_credit_report is not null");
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportEqualTo(String value) {
            addCriterion("sc_applicant_credit_report =", value, "scApplicantCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScApplicantCreditReportEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_applicant_credit_report = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportNotEqualTo(String value) {
            addCriterion("sc_applicant_credit_report <>", value, "scApplicantCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScApplicantCreditReportNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_applicant_credit_report <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportGreaterThan(String value) {
            addCriterion("sc_applicant_credit_report >", value, "scApplicantCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScApplicantCreditReportGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_applicant_credit_report > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportGreaterThanOrEqualTo(String value) {
            addCriterion("sc_applicant_credit_report >=", value, "scApplicantCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScApplicantCreditReportGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_applicant_credit_report >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportLessThan(String value) {
            addCriterion("sc_applicant_credit_report <", value, "scApplicantCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScApplicantCreditReportLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_applicant_credit_report < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportLessThanOrEqualTo(String value) {
            addCriterion("sc_applicant_credit_report <=", value, "scApplicantCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScApplicantCreditReportLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_applicant_credit_report <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportLike(String value) {
            addCriterion("sc_applicant_credit_report like", value, "scApplicantCreditReport");
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportNotLike(String value) {
            addCriterion("sc_applicant_credit_report not like", value, "scApplicantCreditReport");
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportIn(List<String> values) {
            addCriterion("sc_applicant_credit_report in", values, "scApplicantCreditReport");
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportNotIn(List<String> values) {
            addCriterion("sc_applicant_credit_report not in", values, "scApplicantCreditReport");
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportBetween(String value1, String value2) {
            addCriterion("sc_applicant_credit_report between", value1, value2, "scApplicantCreditReport");
            return (Criteria) this;
        }

        public Criteria andScApplicantCreditReportNotBetween(String value1, String value2) {
            addCriterion("sc_applicant_credit_report not between", value1, value2, "scApplicantCreditReport");
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportIsNull() {
            addCriterion("sc_spouse_credit_report is null");
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportIsNotNull() {
            addCriterion("sc_spouse_credit_report is not null");
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportEqualTo(String value) {
            addCriterion("sc_spouse_credit_report =", value, "scSpouseCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScSpouseCreditReportEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_spouse_credit_report = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportNotEqualTo(String value) {
            addCriterion("sc_spouse_credit_report <>", value, "scSpouseCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScSpouseCreditReportNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_spouse_credit_report <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportGreaterThan(String value) {
            addCriterion("sc_spouse_credit_report >", value, "scSpouseCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScSpouseCreditReportGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_spouse_credit_report > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportGreaterThanOrEqualTo(String value) {
            addCriterion("sc_spouse_credit_report >=", value, "scSpouseCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScSpouseCreditReportGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_spouse_credit_report >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportLessThan(String value) {
            addCriterion("sc_spouse_credit_report <", value, "scSpouseCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScSpouseCreditReportLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_spouse_credit_report < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportLessThanOrEqualTo(String value) {
            addCriterion("sc_spouse_credit_report <=", value, "scSpouseCreditReport");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScSpouseCreditReportLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_spouse_credit_report <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportLike(String value) {
            addCriterion("sc_spouse_credit_report like", value, "scSpouseCreditReport");
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportNotLike(String value) {
            addCriterion("sc_spouse_credit_report not like", value, "scSpouseCreditReport");
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportIn(List<String> values) {
            addCriterion("sc_spouse_credit_report in", values, "scSpouseCreditReport");
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportNotIn(List<String> values) {
            addCriterion("sc_spouse_credit_report not in", values, "scSpouseCreditReport");
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportBetween(String value1, String value2) {
            addCriterion("sc_spouse_credit_report between", value1, value2, "scSpouseCreditReport");
            return (Criteria) this;
        }

        public Criteria andScSpouseCreditReportNotBetween(String value1, String value2) {
            addCriterion("sc_spouse_credit_report not between", value1, value2, "scSpouseCreditReport");
            return (Criteria) this;
        }

        public Criteria andScGuarantorIsNull() {
            addCriterion("sc_guarantor is null");
            return (Criteria) this;
        }

        public Criteria andScGuarantorIsNotNull() {
            addCriterion("sc_guarantor is not null");
            return (Criteria) this;
        }

        public Criteria andScGuarantorEqualTo(String value) {
            addCriterion("sc_guarantor =", value, "scGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorNotEqualTo(String value) {
            addCriterion("sc_guarantor <>", value, "scGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorGreaterThan(String value) {
            addCriterion("sc_guarantor >", value, "scGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorGreaterThanOrEqualTo(String value) {
            addCriterion("sc_guarantor >=", value, "scGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorLessThan(String value) {
            addCriterion("sc_guarantor <", value, "scGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorLessThanOrEqualTo(String value) {
            addCriterion("sc_guarantor <=", value, "scGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorLike(String value) {
            addCriterion("sc_guarantor like", value, "scGuarantor");
            return (Criteria) this;
        }

        public Criteria andScGuarantorNotLike(String value) {
            addCriterion("sc_guarantor not like", value, "scGuarantor");
            return (Criteria) this;
        }

        public Criteria andScGuarantorIn(List<String> values) {
            addCriterion("sc_guarantor in", values, "scGuarantor");
            return (Criteria) this;
        }

        public Criteria andScGuarantorNotIn(List<String> values) {
            addCriterion("sc_guarantor not in", values, "scGuarantor");
            return (Criteria) this;
        }

        public Criteria andScGuarantorBetween(String value1, String value2) {
            addCriterion("sc_guarantor between", value1, value2, "scGuarantor");
            return (Criteria) this;
        }

        public Criteria andScGuarantorNotBetween(String value1, String value2) {
            addCriterion("sc_guarantor not between", value1, value2, "scGuarantor");
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetIsNull() {
            addCriterion("sc_guarantor_asset is null");
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetIsNotNull() {
            addCriterion("sc_guarantor_asset is not null");
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetEqualTo(String value) {
            addCriterion("sc_guarantor_asset =", value, "scGuarantorAsset");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorAssetEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor_asset = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetNotEqualTo(String value) {
            addCriterion("sc_guarantor_asset <>", value, "scGuarantorAsset");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorAssetNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor_asset <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetGreaterThan(String value) {
            addCriterion("sc_guarantor_asset >", value, "scGuarantorAsset");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorAssetGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor_asset > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetGreaterThanOrEqualTo(String value) {
            addCriterion("sc_guarantor_asset >=", value, "scGuarantorAsset");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorAssetGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor_asset >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetLessThan(String value) {
            addCriterion("sc_guarantor_asset <", value, "scGuarantorAsset");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorAssetLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor_asset < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetLessThanOrEqualTo(String value) {
            addCriterion("sc_guarantor_asset <=", value, "scGuarantorAsset");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScGuarantorAssetLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_guarantor_asset <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetLike(String value) {
            addCriterion("sc_guarantor_asset like", value, "scGuarantorAsset");
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetNotLike(String value) {
            addCriterion("sc_guarantor_asset not like", value, "scGuarantorAsset");
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetIn(List<String> values) {
            addCriterion("sc_guarantor_asset in", values, "scGuarantorAsset");
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetNotIn(List<String> values) {
            addCriterion("sc_guarantor_asset not in", values, "scGuarantorAsset");
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetBetween(String value1, String value2) {
            addCriterion("sc_guarantor_asset between", value1, value2, "scGuarantorAsset");
            return (Criteria) this;
        }

        public Criteria andScGuarantorAssetNotBetween(String value1, String value2) {
            addCriterion("sc_guarantor_asset not between", value1, value2, "scGuarantorAsset");
            return (Criteria) this;
        }

        public Criteria andScExtraInfoIsNull() {
            addCriterion("sc_extra_info is null");
            return (Criteria) this;
        }

        public Criteria andScExtraInfoIsNotNull() {
            addCriterion("sc_extra_info is not null");
            return (Criteria) this;
        }

        public Criteria andScExtraInfoEqualTo(String value) {
            addCriterion("sc_extra_info =", value, "scExtraInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraInfoEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_info = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraInfoNotEqualTo(String value) {
            addCriterion("sc_extra_info <>", value, "scExtraInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraInfoNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_info <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraInfoGreaterThan(String value) {
            addCriterion("sc_extra_info >", value, "scExtraInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraInfoGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_info > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraInfoGreaterThanOrEqualTo(String value) {
            addCriterion("sc_extra_info >=", value, "scExtraInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraInfoGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_info >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraInfoLessThan(String value) {
            addCriterion("sc_extra_info <", value, "scExtraInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraInfoLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_info < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraInfoLessThanOrEqualTo(String value) {
            addCriterion("sc_extra_info <=", value, "scExtraInfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraInfoLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_info <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraInfoLike(String value) {
            addCriterion("sc_extra_info like", value, "scExtraInfo");
            return (Criteria) this;
        }

        public Criteria andScExtraInfoNotLike(String value) {
            addCriterion("sc_extra_info not like", value, "scExtraInfo");
            return (Criteria) this;
        }

        public Criteria andScExtraInfoIn(List<String> values) {
            addCriterion("sc_extra_info in", values, "scExtraInfo");
            return (Criteria) this;
        }

        public Criteria andScExtraInfoNotIn(List<String> values) {
            addCriterion("sc_extra_info not in", values, "scExtraInfo");
            return (Criteria) this;
        }

        public Criteria andScExtraInfoBetween(String value1, String value2) {
            addCriterion("sc_extra_info between", value1, value2, "scExtraInfo");
            return (Criteria) this;
        }

        public Criteria andScExtraInfoNotBetween(String value1, String value2) {
            addCriterion("sc_extra_info not between", value1, value2, "scExtraInfo");
            return (Criteria) this;
        }

        public Criteria andScCommentIsNull() {
            addCriterion("sc_comment is null");
            return (Criteria) this;
        }

        public Criteria andScCommentIsNotNull() {
            addCriterion("sc_comment is not null");
            return (Criteria) this;
        }

        public Criteria andScCommentEqualTo(String value) {
            addCriterion("sc_comment =", value, "scComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScCommentEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_comment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScCommentNotEqualTo(String value) {
            addCriterion("sc_comment <>", value, "scComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScCommentNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_comment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScCommentGreaterThan(String value) {
            addCriterion("sc_comment >", value, "scComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScCommentGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_comment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScCommentGreaterThanOrEqualTo(String value) {
            addCriterion("sc_comment >=", value, "scComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScCommentGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_comment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScCommentLessThan(String value) {
            addCriterion("sc_comment <", value, "scComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScCommentLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_comment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScCommentLessThanOrEqualTo(String value) {
            addCriterion("sc_comment <=", value, "scComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScCommentLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_comment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScCommentLike(String value) {
            addCriterion("sc_comment like", value, "scComment");
            return (Criteria) this;
        }

        public Criteria andScCommentNotLike(String value) {
            addCriterion("sc_comment not like", value, "scComment");
            return (Criteria) this;
        }

        public Criteria andScCommentIn(List<String> values) {
            addCriterion("sc_comment in", values, "scComment");
            return (Criteria) this;
        }

        public Criteria andScCommentNotIn(List<String> values) {
            addCriterion("sc_comment not in", values, "scComment");
            return (Criteria) this;
        }

        public Criteria andScCommentBetween(String value1, String value2) {
            addCriterion("sc_comment between", value1, value2, "scComment");
            return (Criteria) this;
        }

        public Criteria andScCommentNotBetween(String value1, String value2) {
            addCriterion("sc_comment not between", value1, value2, "scComment");
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlIsNull() {
            addCriterion("sc_letter_intent_url is null");
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlIsNotNull() {
            addCriterion("sc_letter_intent_url is not null");
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlEqualTo(String value) {
            addCriterion("sc_letter_intent_url =", value, "scLetterIntentUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScLetterIntentUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_letter_intent_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlNotEqualTo(String value) {
            addCriterion("sc_letter_intent_url <>", value, "scLetterIntentUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScLetterIntentUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_letter_intent_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlGreaterThan(String value) {
            addCriterion("sc_letter_intent_url >", value, "scLetterIntentUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScLetterIntentUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_letter_intent_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlGreaterThanOrEqualTo(String value) {
            addCriterion("sc_letter_intent_url >=", value, "scLetterIntentUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScLetterIntentUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_letter_intent_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlLessThan(String value) {
            addCriterion("sc_letter_intent_url <", value, "scLetterIntentUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScLetterIntentUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_letter_intent_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlLessThanOrEqualTo(String value) {
            addCriterion("sc_letter_intent_url <=", value, "scLetterIntentUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScLetterIntentUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_letter_intent_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlLike(String value) {
            addCriterion("sc_letter_intent_url like", value, "scLetterIntentUrl");
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlNotLike(String value) {
            addCriterion("sc_letter_intent_url not like", value, "scLetterIntentUrl");
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlIn(List<String> values) {
            addCriterion("sc_letter_intent_url in", values, "scLetterIntentUrl");
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlNotIn(List<String> values) {
            addCriterion("sc_letter_intent_url not in", values, "scLetterIntentUrl");
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlBetween(String value1, String value2) {
            addCriterion("sc_letter_intent_url between", value1, value2, "scLetterIntentUrl");
            return (Criteria) this;
        }

        public Criteria andScLetterIntentUrlNotBetween(String value1, String value2) {
            addCriterion("sc_letter_intent_url not between", value1, value2, "scLetterIntentUrl");
            return (Criteria) this;
        }

        public Criteria andScAuditDateIsNull() {
            addCriterion("sc_audit_date is null");
            return (Criteria) this;
        }

        public Criteria andScAuditDateIsNotNull() {
            addCriterion("sc_audit_date is not null");
            return (Criteria) this;
        }

        public Criteria andScAuditDateEqualTo(LocalDateTime value) {
            addCriterion("sc_audit_date =", value, "scAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScAuditDateEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_audit_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScAuditDateNotEqualTo(LocalDateTime value) {
            addCriterion("sc_audit_date <>", value, "scAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScAuditDateNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_audit_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScAuditDateGreaterThan(LocalDateTime value) {
            addCriterion("sc_audit_date >", value, "scAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScAuditDateGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_audit_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScAuditDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("sc_audit_date >=", value, "scAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScAuditDateGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_audit_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScAuditDateLessThan(LocalDateTime value) {
            addCriterion("sc_audit_date <", value, "scAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScAuditDateLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_audit_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScAuditDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("sc_audit_date <=", value, "scAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScAuditDateLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_audit_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScAuditDateIn(List<LocalDateTime> values) {
            addCriterion("sc_audit_date in", values, "scAuditDate");
            return (Criteria) this;
        }

        public Criteria andScAuditDateNotIn(List<LocalDateTime> values) {
            addCriterion("sc_audit_date not in", values, "scAuditDate");
            return (Criteria) this;
        }

        public Criteria andScAuditDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("sc_audit_date between", value1, value2, "scAuditDate");
            return (Criteria) this;
        }

        public Criteria andScAuditDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("sc_audit_date not between", value1, value2, "scAuditDate");
            return (Criteria) this;
        }

        public Criteria andScOperatorIsNull() {
            addCriterion("sc_operator is null");
            return (Criteria) this;
        }

        public Criteria andScOperatorIsNotNull() {
            addCriterion("sc_operator is not null");
            return (Criteria) this;
        }

        public Criteria andScOperatorEqualTo(String value) {
            addCriterion("sc_operator =", value, "scOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScOperatorEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_operator = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScOperatorNotEqualTo(String value) {
            addCriterion("sc_operator <>", value, "scOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScOperatorNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_operator <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScOperatorGreaterThan(String value) {
            addCriterion("sc_operator >", value, "scOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScOperatorGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_operator > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScOperatorGreaterThanOrEqualTo(String value) {
            addCriterion("sc_operator >=", value, "scOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScOperatorGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_operator >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScOperatorLessThan(String value) {
            addCriterion("sc_operator <", value, "scOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScOperatorLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_operator < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScOperatorLessThanOrEqualTo(String value) {
            addCriterion("sc_operator <=", value, "scOperator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScOperatorLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_operator <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScOperatorLike(String value) {
            addCriterion("sc_operator like", value, "scOperator");
            return (Criteria) this;
        }

        public Criteria andScOperatorNotLike(String value) {
            addCriterion("sc_operator not like", value, "scOperator");
            return (Criteria) this;
        }

        public Criteria andScOperatorIn(List<String> values) {
            addCriterion("sc_operator in", values, "scOperator");
            return (Criteria) this;
        }

        public Criteria andScOperatorNotIn(List<String> values) {
            addCriterion("sc_operator not in", values, "scOperator");
            return (Criteria) this;
        }

        public Criteria andScOperatorBetween(String value1, String value2) {
            addCriterion("sc_operator between", value1, value2, "scOperator");
            return (Criteria) this;
        }

        public Criteria andScOperatorNotBetween(String value1, String value2) {
            addCriterion("sc_operator not between", value1, value2, "scOperator");
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlIsNull() {
            addCriterion("sc_extra_pic_url is null");
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlIsNotNull() {
            addCriterion("sc_extra_pic_url is not null");
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlEqualTo(String[] value) {
            addScExtraPicUrlCriterion("sc_extra_pic_url =", value, "scExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraPicUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_pic_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlNotEqualTo(String[] value) {
            addScExtraPicUrlCriterion("sc_extra_pic_url <>", value, "scExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraPicUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_pic_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlGreaterThan(String[] value) {
            addScExtraPicUrlCriterion("sc_extra_pic_url >", value, "scExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraPicUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_pic_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlGreaterThanOrEqualTo(String[] value) {
            addScExtraPicUrlCriterion("sc_extra_pic_url >=", value, "scExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraPicUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_pic_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlLessThan(String[] value) {
            addScExtraPicUrlCriterion("sc_extra_pic_url <", value, "scExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraPicUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_pic_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlLessThanOrEqualTo(String[] value) {
            addScExtraPicUrlCriterion("sc_extra_pic_url <=", value, "scExtraPicUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andScExtraPicUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("sc_extra_pic_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlLike(String[] value) {
            addScExtraPicUrlCriterion("sc_extra_pic_url like", value, "scExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlNotLike(String[] value) {
            addScExtraPicUrlCriterion("sc_extra_pic_url not like", value, "scExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlIn(List<String[]> values) {
            addScExtraPicUrlCriterion("sc_extra_pic_url in", values, "scExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlNotIn(List<String[]> values) {
            addScExtraPicUrlCriterion("sc_extra_pic_url not in", values, "scExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlBetween(String[] value1, String[] value2) {
            addScExtraPicUrlCriterion("sc_extra_pic_url between", value1, value2, "scExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andScExtraPicUrlNotBetween(String[] value1, String[] value2) {
            addScExtraPicUrlCriterion("sc_extra_pic_url not between", value1, value2, "scExtraPicUrl");
            return (Criteria) this;
        }

        public Criteria andBBankIdIsNull() {
            addCriterion("b_bank_id is null");
            return (Criteria) this;
        }

        public Criteria andBBankIdIsNotNull() {
            addCriterion("b_bank_id is not null");
            return (Criteria) this;
        }

        public Criteria andBBankIdEqualTo(Integer value) {
            addCriterion("b_bank_id =", value, "bBankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBBankIdEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_bank_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBBankIdNotEqualTo(Integer value) {
            addCriterion("b_bank_id <>", value, "bBankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBBankIdNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_bank_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBBankIdGreaterThan(Integer value) {
            addCriterion("b_bank_id >", value, "bBankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBBankIdGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_bank_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBBankIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("b_bank_id >=", value, "bBankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBBankIdGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_bank_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBBankIdLessThan(Integer value) {
            addCriterion("b_bank_id <", value, "bBankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBBankIdLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_bank_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBBankIdLessThanOrEqualTo(Integer value) {
            addCriterion("b_bank_id <=", value, "bBankId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBBankIdLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_bank_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBBankIdIn(List<Integer> values) {
            addCriterion("b_bank_id in", values, "bBankId");
            return (Criteria) this;
        }

        public Criteria andBBankIdNotIn(List<Integer> values) {
            addCriterion("b_bank_id not in", values, "bBankId");
            return (Criteria) this;
        }

        public Criteria andBBankIdBetween(Integer value1, Integer value2) {
            addCriterion("b_bank_id between", value1, value2, "bBankId");
            return (Criteria) this;
        }

        public Criteria andBBankIdNotBetween(Integer value1, Integer value2) {
            addCriterion("b_bank_id not between", value1, value2, "bBankId");
            return (Criteria) this;
        }

        public Criteria andBNameIsNull() {
            addCriterion("b_name is null");
            return (Criteria) this;
        }

        public Criteria andBNameIsNotNull() {
            addCriterion("b_name is not null");
            return (Criteria) this;
        }

        public Criteria andBNameEqualTo(String value) {
            addCriterion("b_name =", value, "bName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBNameEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBNameNotEqualTo(String value) {
            addCriterion("b_name <>", value, "bName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBNameNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBNameGreaterThan(String value) {
            addCriterion("b_name >", value, "bName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBNameGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBNameGreaterThanOrEqualTo(String value) {
            addCriterion("b_name >=", value, "bName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBNameGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBNameLessThan(String value) {
            addCriterion("b_name <", value, "bName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBNameLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBNameLessThanOrEqualTo(String value) {
            addCriterion("b_name <=", value, "bName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBNameLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBNameLike(String value) {
            addCriterion("b_name like", value, "bName");
            return (Criteria) this;
        }

        public Criteria andBNameNotLike(String value) {
            addCriterion("b_name not like", value, "bName");
            return (Criteria) this;
        }

        public Criteria andBNameIn(List<String> values) {
            addCriterion("b_name in", values, "bName");
            return (Criteria) this;
        }

        public Criteria andBNameNotIn(List<String> values) {
            addCriterion("b_name not in", values, "bName");
            return (Criteria) this;
        }

        public Criteria andBNameBetween(String value1, String value2) {
            addCriterion("b_name between", value1, value2, "bName");
            return (Criteria) this;
        }

        public Criteria andBNameNotBetween(String value1, String value2) {
            addCriterion("b_name not between", value1, value2, "bName");
            return (Criteria) this;
        }

        public Criteria andBSubBranchIsNull() {
            addCriterion("b_sub_branch is null");
            return (Criteria) this;
        }

        public Criteria andBSubBranchIsNotNull() {
            addCriterion("b_sub_branch is not null");
            return (Criteria) this;
        }

        public Criteria andBSubBranchEqualTo(String value) {
            addCriterion("b_sub_branch =", value, "bSubBranch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBSubBranchEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_sub_branch = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBSubBranchNotEqualTo(String value) {
            addCriterion("b_sub_branch <>", value, "bSubBranch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBSubBranchNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_sub_branch <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBSubBranchGreaterThan(String value) {
            addCriterion("b_sub_branch >", value, "bSubBranch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBSubBranchGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_sub_branch > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBSubBranchGreaterThanOrEqualTo(String value) {
            addCriterion("b_sub_branch >=", value, "bSubBranch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBSubBranchGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_sub_branch >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBSubBranchLessThan(String value) {
            addCriterion("b_sub_branch <", value, "bSubBranch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBSubBranchLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_sub_branch < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBSubBranchLessThanOrEqualTo(String value) {
            addCriterion("b_sub_branch <=", value, "bSubBranch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBSubBranchLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_sub_branch <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBSubBranchLike(String value) {
            addCriterion("b_sub_branch like", value, "bSubBranch");
            return (Criteria) this;
        }

        public Criteria andBSubBranchNotLike(String value) {
            addCriterion("b_sub_branch not like", value, "bSubBranch");
            return (Criteria) this;
        }

        public Criteria andBSubBranchIn(List<String> values) {
            addCriterion("b_sub_branch in", values, "bSubBranch");
            return (Criteria) this;
        }

        public Criteria andBSubBranchNotIn(List<String> values) {
            addCriterion("b_sub_branch not in", values, "bSubBranch");
            return (Criteria) this;
        }

        public Criteria andBSubBranchBetween(String value1, String value2) {
            addCriterion("b_sub_branch between", value1, value2, "bSubBranch");
            return (Criteria) this;
        }

        public Criteria andBSubBranchNotBetween(String value1, String value2) {
            addCriterion("b_sub_branch not between", value1, value2, "bSubBranch");
            return (Criteria) this;
        }

        public Criteria andBOpertatorIsNull() {
            addCriterion("b_opertator is null");
            return (Criteria) this;
        }

        public Criteria andBOpertatorIsNotNull() {
            addCriterion("b_opertator is not null");
            return (Criteria) this;
        }

        public Criteria andBOpertatorEqualTo(String value) {
            addCriterion("b_opertator =", value, "bOpertator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBOpertatorEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_opertator = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBOpertatorNotEqualTo(String value) {
            addCriterion("b_opertator <>", value, "bOpertator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBOpertatorNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_opertator <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBOpertatorGreaterThan(String value) {
            addCriterion("b_opertator >", value, "bOpertator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBOpertatorGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_opertator > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBOpertatorGreaterThanOrEqualTo(String value) {
            addCriterion("b_opertator >=", value, "bOpertator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBOpertatorGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_opertator >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBOpertatorLessThan(String value) {
            addCriterion("b_opertator <", value, "bOpertator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBOpertatorLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_opertator < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBOpertatorLessThanOrEqualTo(String value) {
            addCriterion("b_opertator <=", value, "bOpertator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBOpertatorLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_opertator <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBOpertatorLike(String value) {
            addCriterion("b_opertator like", value, "bOpertator");
            return (Criteria) this;
        }

        public Criteria andBOpertatorNotLike(String value) {
            addCriterion("b_opertator not like", value, "bOpertator");
            return (Criteria) this;
        }

        public Criteria andBOpertatorIn(List<String> values) {
            addCriterion("b_opertator in", values, "bOpertator");
            return (Criteria) this;
        }

        public Criteria andBOpertatorNotIn(List<String> values) {
            addCriterion("b_opertator not in", values, "bOpertator");
            return (Criteria) this;
        }

        public Criteria andBOpertatorBetween(String value1, String value2) {
            addCriterion("b_opertator between", value1, value2, "bOpertator");
            return (Criteria) this;
        }

        public Criteria andBOpertatorNotBetween(String value1, String value2) {
            addCriterion("b_opertator not between", value1, value2, "bOpertator");
            return (Criteria) this;
        }

        public Criteria andBCreditIsNull() {
            addCriterion("b_credit is null");
            return (Criteria) this;
        }

        public Criteria andBCreditIsNotNull() {
            addCriterion("b_credit is not null");
            return (Criteria) this;
        }

        public Criteria andBCreditEqualTo(String value) {
            addCriterion("b_credit =", value, "bCredit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCreditEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_credit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCreditNotEqualTo(String value) {
            addCriterion("b_credit <>", value, "bCredit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCreditNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_credit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCreditGreaterThan(String value) {
            addCriterion("b_credit >", value, "bCredit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCreditGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_credit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCreditGreaterThanOrEqualTo(String value) {
            addCriterion("b_credit >=", value, "bCredit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCreditGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_credit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCreditLessThan(String value) {
            addCriterion("b_credit <", value, "bCredit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCreditLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_credit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCreditLessThanOrEqualTo(String value) {
            addCriterion("b_credit <=", value, "bCredit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCreditLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_credit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCreditLike(String value) {
            addCriterion("b_credit like", value, "bCredit");
            return (Criteria) this;
        }

        public Criteria andBCreditNotLike(String value) {
            addCriterion("b_credit not like", value, "bCredit");
            return (Criteria) this;
        }

        public Criteria andBCreditIn(List<String> values) {
            addCriterion("b_credit in", values, "bCredit");
            return (Criteria) this;
        }

        public Criteria andBCreditNotIn(List<String> values) {
            addCriterion("b_credit not in", values, "bCredit");
            return (Criteria) this;
        }

        public Criteria andBCreditBetween(String value1, String value2) {
            addCriterion("b_credit between", value1, value2, "bCredit");
            return (Criteria) this;
        }

        public Criteria andBCreditNotBetween(String value1, String value2) {
            addCriterion("b_credit not between", value1, value2, "bCredit");
            return (Criteria) this;
        }

        public Criteria andBLendingDateIsNull() {
            addCriterion("b_lending_date is null");
            return (Criteria) this;
        }

        public Criteria andBLendingDateIsNotNull() {
            addCriterion("b_lending_date is not null");
            return (Criteria) this;
        }

        public Criteria andBLendingDateEqualTo(LocalDateTime value) {
            addCriterion("b_lending_date =", value, "bLendingDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLendingDateEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_lending_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLendingDateNotEqualTo(LocalDateTime value) {
            addCriterion("b_lending_date <>", value, "bLendingDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLendingDateNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_lending_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLendingDateGreaterThan(LocalDateTime value) {
            addCriterion("b_lending_date >", value, "bLendingDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLendingDateGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_lending_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLendingDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("b_lending_date >=", value, "bLendingDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLendingDateGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_lending_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLendingDateLessThan(LocalDateTime value) {
            addCriterion("b_lending_date <", value, "bLendingDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLendingDateLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_lending_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLendingDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("b_lending_date <=", value, "bLendingDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLendingDateLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_lending_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLendingDateIn(List<LocalDateTime> values) {
            addCriterion("b_lending_date in", values, "bLendingDate");
            return (Criteria) this;
        }

        public Criteria andBLendingDateNotIn(List<LocalDateTime> values) {
            addCriterion("b_lending_date not in", values, "bLendingDate");
            return (Criteria) this;
        }

        public Criteria andBLendingDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("b_lending_date between", value1, value2, "bLendingDate");
            return (Criteria) this;
        }

        public Criteria andBLendingDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("b_lending_date not between", value1, value2, "bLendingDate");
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanIsNull() {
            addCriterion("b_period_loan is null");
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanIsNotNull() {
            addCriterion("b_period_loan is not null");
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanEqualTo(String value) {
            addCriterion("b_period_loan =", value, "bPeriodLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBPeriodLoanEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_period_loan = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanNotEqualTo(String value) {
            addCriterion("b_period_loan <>", value, "bPeriodLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBPeriodLoanNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_period_loan <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanGreaterThan(String value) {
            addCriterion("b_period_loan >", value, "bPeriodLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBPeriodLoanGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_period_loan > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanGreaterThanOrEqualTo(String value) {
            addCriterion("b_period_loan >=", value, "bPeriodLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBPeriodLoanGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_period_loan >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanLessThan(String value) {
            addCriterion("b_period_loan <", value, "bPeriodLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBPeriodLoanLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_period_loan < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanLessThanOrEqualTo(String value) {
            addCriterion("b_period_loan <=", value, "bPeriodLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBPeriodLoanLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_period_loan <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanLike(String value) {
            addCriterion("b_period_loan like", value, "bPeriodLoan");
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanNotLike(String value) {
            addCriterion("b_period_loan not like", value, "bPeriodLoan");
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanIn(List<String> values) {
            addCriterion("b_period_loan in", values, "bPeriodLoan");
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanNotIn(List<String> values) {
            addCriterion("b_period_loan not in", values, "bPeriodLoan");
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanBetween(String value1, String value2) {
            addCriterion("b_period_loan between", value1, value2, "bPeriodLoan");
            return (Criteria) this;
        }

        public Criteria andBPeriodLoanNotBetween(String value1, String value2) {
            addCriterion("b_period_loan not between", value1, value2, "bPeriodLoan");
            return (Criteria) this;
        }

        public Criteria andBRepaymentIsNull() {
            addCriterion("b_repayment is null");
            return (Criteria) this;
        }

        public Criteria andBRepaymentIsNotNull() {
            addCriterion("b_repayment is not null");
            return (Criteria) this;
        }

        public Criteria andBRepaymentEqualTo(String value) {
            addCriterion("b_repayment =", value, "bRepayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBRepaymentEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_repayment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBRepaymentNotEqualTo(String value) {
            addCriterion("b_repayment <>", value, "bRepayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBRepaymentNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_repayment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBRepaymentGreaterThan(String value) {
            addCriterion("b_repayment >", value, "bRepayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBRepaymentGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_repayment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBRepaymentGreaterThanOrEqualTo(String value) {
            addCriterion("b_repayment >=", value, "bRepayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBRepaymentGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_repayment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBRepaymentLessThan(String value) {
            addCriterion("b_repayment <", value, "bRepayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBRepaymentLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_repayment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBRepaymentLessThanOrEqualTo(String value) {
            addCriterion("b_repayment <=", value, "bRepayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBRepaymentLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_repayment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBRepaymentLike(String value) {
            addCriterion("b_repayment like", value, "bRepayment");
            return (Criteria) this;
        }

        public Criteria andBRepaymentNotLike(String value) {
            addCriterion("b_repayment not like", value, "bRepayment");
            return (Criteria) this;
        }

        public Criteria andBRepaymentIn(List<String> values) {
            addCriterion("b_repayment in", values, "bRepayment");
            return (Criteria) this;
        }

        public Criteria andBRepaymentNotIn(List<String> values) {
            addCriterion("b_repayment not in", values, "bRepayment");
            return (Criteria) this;
        }

        public Criteria andBRepaymentBetween(String value1, String value2) {
            addCriterion("b_repayment between", value1, value2, "bRepayment");
            return (Criteria) this;
        }

        public Criteria andBRepaymentNotBetween(String value1, String value2) {
            addCriterion("b_repayment not between", value1, value2, "bRepayment");
            return (Criteria) this;
        }

        public Criteria andBInterestRateIsNull() {
            addCriterion("b_interest_rate is null");
            return (Criteria) this;
        }

        public Criteria andBInterestRateIsNotNull() {
            addCriterion("b_interest_rate is not null");
            return (Criteria) this;
        }

        public Criteria andBInterestRateEqualTo(String value) {
            addCriterion("b_interest_rate =", value, "bInterestRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestRateEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_rate = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestRateNotEqualTo(String value) {
            addCriterion("b_interest_rate <>", value, "bInterestRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestRateNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_rate <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestRateGreaterThan(String value) {
            addCriterion("b_interest_rate >", value, "bInterestRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestRateGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_rate > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestRateGreaterThanOrEqualTo(String value) {
            addCriterion("b_interest_rate >=", value, "bInterestRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestRateGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_rate >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestRateLessThan(String value) {
            addCriterion("b_interest_rate <", value, "bInterestRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestRateLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_rate < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestRateLessThanOrEqualTo(String value) {
            addCriterion("b_interest_rate <=", value, "bInterestRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestRateLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_rate <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestRateLike(String value) {
            addCriterion("b_interest_rate like", value, "bInterestRate");
            return (Criteria) this;
        }

        public Criteria andBInterestRateNotLike(String value) {
            addCriterion("b_interest_rate not like", value, "bInterestRate");
            return (Criteria) this;
        }

        public Criteria andBInterestRateIn(List<String> values) {
            addCriterion("b_interest_rate in", values, "bInterestRate");
            return (Criteria) this;
        }

        public Criteria andBInterestRateNotIn(List<String> values) {
            addCriterion("b_interest_rate not in", values, "bInterestRate");
            return (Criteria) this;
        }

        public Criteria andBInterestRateBetween(String value1, String value2) {
            addCriterion("b_interest_rate between", value1, value2, "bInterestRate");
            return (Criteria) this;
        }

        public Criteria andBInterestRateNotBetween(String value1, String value2) {
            addCriterion("b_interest_rate not between", value1, value2, "bInterestRate");
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodIsNull() {
            addCriterion("b_interest_period is null");
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodIsNotNull() {
            addCriterion("b_interest_period is not null");
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodEqualTo(String value) {
            addCriterion("b_interest_period =", value, "bInterestPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestPeriodEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_period = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodNotEqualTo(String value) {
            addCriterion("b_interest_period <>", value, "bInterestPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestPeriodNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_period <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodGreaterThan(String value) {
            addCriterion("b_interest_period >", value, "bInterestPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestPeriodGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_period > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodGreaterThanOrEqualTo(String value) {
            addCriterion("b_interest_period >=", value, "bInterestPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestPeriodGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_period >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodLessThan(String value) {
            addCriterion("b_interest_period <", value, "bInterestPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestPeriodLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_period < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodLessThanOrEqualTo(String value) {
            addCriterion("b_interest_period <=", value, "bInterestPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBInterestPeriodLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_interest_period <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodLike(String value) {
            addCriterion("b_interest_period like", value, "bInterestPeriod");
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodNotLike(String value) {
            addCriterion("b_interest_period not like", value, "bInterestPeriod");
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodIn(List<String> values) {
            addCriterion("b_interest_period in", values, "bInterestPeriod");
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodNotIn(List<String> values) {
            addCriterion("b_interest_period not in", values, "bInterestPeriod");
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodBetween(String value1, String value2) {
            addCriterion("b_interest_period between", value1, value2, "bInterestPeriod");
            return (Criteria) this;
        }

        public Criteria andBInterestPeriodNotBetween(String value1, String value2) {
            addCriterion("b_interest_period not between", value1, value2, "bInterestPeriod");
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateIsNull() {
            addCriterion("b_loan_start_date is null");
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateIsNotNull() {
            addCriterion("b_loan_start_date is not null");
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateEqualTo(LocalDateTime value) {
            addCriterion("b_loan_start_date =", value, "bLoanStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanStartDateEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_start_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateNotEqualTo(LocalDateTime value) {
            addCriterion("b_loan_start_date <>", value, "bLoanStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanStartDateNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_start_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateGreaterThan(LocalDateTime value) {
            addCriterion("b_loan_start_date >", value, "bLoanStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanStartDateGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_start_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("b_loan_start_date >=", value, "bLoanStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanStartDateGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_start_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateLessThan(LocalDateTime value) {
            addCriterion("b_loan_start_date <", value, "bLoanStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanStartDateLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_start_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("b_loan_start_date <=", value, "bLoanStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanStartDateLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_start_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateIn(List<LocalDateTime> values) {
            addCriterion("b_loan_start_date in", values, "bLoanStartDate");
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateNotIn(List<LocalDateTime> values) {
            addCriterion("b_loan_start_date not in", values, "bLoanStartDate");
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("b_loan_start_date between", value1, value2, "bLoanStartDate");
            return (Criteria) this;
        }

        public Criteria andBLoanStartDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("b_loan_start_date not between", value1, value2, "bLoanStartDate");
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateIsNull() {
            addCriterion("b_loan_end_date is null");
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateIsNotNull() {
            addCriterion("b_loan_end_date is not null");
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateEqualTo(LocalDateTime value) {
            addCriterion("b_loan_end_date =", value, "bLoanEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanEndDateEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_end_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateNotEqualTo(LocalDateTime value) {
            addCriterion("b_loan_end_date <>", value, "bLoanEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanEndDateNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_end_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateGreaterThan(LocalDateTime value) {
            addCriterion("b_loan_end_date >", value, "bLoanEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanEndDateGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_end_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("b_loan_end_date >=", value, "bLoanEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanEndDateGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_end_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateLessThan(LocalDateTime value) {
            addCriterion("b_loan_end_date <", value, "bLoanEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanEndDateLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_end_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("b_loan_end_date <=", value, "bLoanEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanEndDateLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_end_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateIn(List<LocalDateTime> values) {
            addCriterion("b_loan_end_date in", values, "bLoanEndDate");
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateNotIn(List<LocalDateTime> values) {
            addCriterion("b_loan_end_date not in", values, "bLoanEndDate");
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("b_loan_end_date between", value1, value2, "bLoanEndDate");
            return (Criteria) this;
        }

        public Criteria andBLoanEndDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("b_loan_end_date not between", value1, value2, "bLoanEndDate");
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceIsNull() {
            addCriterion("b_loan_finance is null");
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceIsNotNull() {
            addCriterion("b_loan_finance is not null");
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceEqualTo(String value) {
            addCriterion("b_loan_finance =", value, "bLoanFinance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanFinanceEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_finance = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceNotEqualTo(String value) {
            addCriterion("b_loan_finance <>", value, "bLoanFinance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanFinanceNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_finance <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceGreaterThan(String value) {
            addCriterion("b_loan_finance >", value, "bLoanFinance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanFinanceGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_finance > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceGreaterThanOrEqualTo(String value) {
            addCriterion("b_loan_finance >=", value, "bLoanFinance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanFinanceGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_finance >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceLessThan(String value) {
            addCriterion("b_loan_finance <", value, "bLoanFinance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanFinanceLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_finance < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceLessThanOrEqualTo(String value) {
            addCriterion("b_loan_finance <=", value, "bLoanFinance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanFinanceLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_finance <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceLike(String value) {
            addCriterion("b_loan_finance like", value, "bLoanFinance");
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceNotLike(String value) {
            addCriterion("b_loan_finance not like", value, "bLoanFinance");
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceIn(List<String> values) {
            addCriterion("b_loan_finance in", values, "bLoanFinance");
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceNotIn(List<String> values) {
            addCriterion("b_loan_finance not in", values, "bLoanFinance");
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceBetween(String value1, String value2) {
            addCriterion("b_loan_finance between", value1, value2, "bLoanFinance");
            return (Criteria) this;
        }

        public Criteria andBLoanFinanceNotBetween(String value1, String value2) {
            addCriterion("b_loan_finance not between", value1, value2, "bLoanFinance");
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlIsNull() {
            addCriterion("b_loan_voucher_url is null");
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlIsNotNull() {
            addCriterion("b_loan_voucher_url is not null");
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlEqualTo(String[] value) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url =", value, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanVoucherUrlEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_voucher_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlNotEqualTo(String[] value) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url <>", value, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanVoucherUrlNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_voucher_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlGreaterThan(String[] value) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url >", value, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanVoucherUrlGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_voucher_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlGreaterThanOrEqualTo(String[] value) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url >=", value, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanVoucherUrlGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_voucher_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlLessThan(String[] value) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url <", value, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanVoucherUrlLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_voucher_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlLessThanOrEqualTo(String[] value) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url <=", value, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBLoanVoucherUrlLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_loan_voucher_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlLike(String[] value) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url like", value, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlNotLike(String[] value) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url not like", value, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlIn(List<String[]> values) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url in", values, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlNotIn(List<String[]> values) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url not in", values, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlBetween(String[] value1, String[] value2) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url between", value1, value2, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        public Criteria andBLoanVoucherUrlNotBetween(String[] value1, String[] value2) {
            addBLoanVoucherUrlCriterion("b_loan_voucher_url not between", value1, value2, "bLoanVoucherUrl");
            return (Criteria) this;
        }

        public Criteria andBCommentIsNull() {
            addCriterion("b_comment is null");
            return (Criteria) this;
        }

        public Criteria andBCommentIsNotNull() {
            addCriterion("b_comment is not null");
            return (Criteria) this;
        }

        public Criteria andBCommentEqualTo(String value) {
            addCriterion("b_comment =", value, "bComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCommentEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_comment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCommentNotEqualTo(String value) {
            addCriterion("b_comment <>", value, "bComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCommentNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_comment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCommentGreaterThan(String value) {
            addCriterion("b_comment >", value, "bComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCommentGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_comment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCommentGreaterThanOrEqualTo(String value) {
            addCriterion("b_comment >=", value, "bComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCommentGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_comment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCommentLessThan(String value) {
            addCriterion("b_comment <", value, "bComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCommentLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_comment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCommentLessThanOrEqualTo(String value) {
            addCriterion("b_comment <=", value, "bComment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBCommentLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_comment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBCommentLike(String value) {
            addCriterion("b_comment like", value, "bComment");
            return (Criteria) this;
        }

        public Criteria andBCommentNotLike(String value) {
            addCriterion("b_comment not like", value, "bComment");
            return (Criteria) this;
        }

        public Criteria andBCommentIn(List<String> values) {
            addCriterion("b_comment in", values, "bComment");
            return (Criteria) this;
        }

        public Criteria andBCommentNotIn(List<String> values) {
            addCriterion("b_comment not in", values, "bComment");
            return (Criteria) this;
        }

        public Criteria andBCommentBetween(String value1, String value2) {
            addCriterion("b_comment between", value1, value2, "bComment");
            return (Criteria) this;
        }

        public Criteria andBCommentNotBetween(String value1, String value2) {
            addCriterion("b_comment not between", value1, value2, "bComment");
            return (Criteria) this;
        }

        public Criteria andBAuditDateIsNull() {
            addCriterion("b_audit_date is null");
            return (Criteria) this;
        }

        public Criteria andBAuditDateIsNotNull() {
            addCriterion("b_audit_date is not null");
            return (Criteria) this;
        }

        public Criteria andBAuditDateEqualTo(LocalDateTime value) {
            addCriterion("b_audit_date =", value, "bAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditDateEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_audit_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditDateNotEqualTo(LocalDateTime value) {
            addCriterion("b_audit_date <>", value, "bAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditDateNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_audit_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditDateGreaterThan(LocalDateTime value) {
            addCriterion("b_audit_date >", value, "bAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditDateGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_audit_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("b_audit_date >=", value, "bAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditDateGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_audit_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditDateLessThan(LocalDateTime value) {
            addCriterion("b_audit_date <", value, "bAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditDateLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_audit_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("b_audit_date <=", value, "bAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditDateLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_audit_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditDateIn(List<LocalDateTime> values) {
            addCriterion("b_audit_date in", values, "bAuditDate");
            return (Criteria) this;
        }

        public Criteria andBAuditDateNotIn(List<LocalDateTime> values) {
            addCriterion("b_audit_date not in", values, "bAuditDate");
            return (Criteria) this;
        }

        public Criteria andBAuditDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("b_audit_date between", value1, value2, "bAuditDate");
            return (Criteria) this;
        }

        public Criteria andBAuditDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("b_audit_date not between", value1, value2, "bAuditDate");
            return (Criteria) this;
        }

        public Criteria andBAuditorIsNull() {
            addCriterion("b_auditor is null");
            return (Criteria) this;
        }

        public Criteria andBAuditorIsNotNull() {
            addCriterion("b_auditor is not null");
            return (Criteria) this;
        }

        public Criteria andBAuditorEqualTo(String value) {
            addCriterion("b_auditor =", value, "bAuditor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditorEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_auditor = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditorNotEqualTo(String value) {
            addCriterion("b_auditor <>", value, "bAuditor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditorNotEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_auditor <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditorGreaterThan(String value) {
            addCriterion("b_auditor >", value, "bAuditor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditorGreaterThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_auditor > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditorGreaterThanOrEqualTo(String value) {
            addCriterion("b_auditor >=", value, "bAuditor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditorGreaterThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_auditor >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditorLessThan(String value) {
            addCriterion("b_auditor <", value, "bAuditor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditorLessThanColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_auditor < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditorLessThanOrEqualTo(String value) {
            addCriterion("b_auditor <=", value, "bAuditor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andBAuditorLessThanOrEqualToColumn(LitemallApplicant.Column column) {
            addCriterion(new StringBuilder("b_auditor <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBAuditorLike(String value) {
            addCriterion("b_auditor like", value, "bAuditor");
            return (Criteria) this;
        }

        public Criteria andBAuditorNotLike(String value) {
            addCriterion("b_auditor not like", value, "bAuditor");
            return (Criteria) this;
        }

        public Criteria andBAuditorIn(List<String> values) {
            addCriterion("b_auditor in", values, "bAuditor");
            return (Criteria) this;
        }

        public Criteria andBAuditorNotIn(List<String> values) {
            addCriterion("b_auditor not in", values, "bAuditor");
            return (Criteria) this;
        }

        public Criteria andBAuditorBetween(String value1, String value2) {
            addCriterion("b_auditor between", value1, value2, "bAuditor");
            return (Criteria) this;
        }

        public Criteria andBAuditorNotBetween(String value1, String value2) {
            addCriterion("b_auditor not between", value1, value2, "bAuditor");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_applicant
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        private LitemallApplicantExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        protected Criteria(LitemallApplicantExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public LitemallApplicantExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallApplicant.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallApplicant.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_applicant
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_applicant
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_applicant
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallApplicantExample example);
    }
}